// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/analysis/analysis.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Analysis {

  /// <summary>Holder for reflection information generated from protos/analysis/analysis.proto</summary>
  public static partial class AnalysisReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/analysis/analysis.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AnalysisReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5wcm90b3MvYW5hbHlzaXMvYW5hbHlzaXMucHJvdG8SCGFuYWx5c2lzIjsK",
            "CklkZW50aWZpZXISDwoHY2F0YWxvZxgBIAEoCRIOCgZzY2hlbWEYAiABKAkS",
            "DAoEbmFtZRgDIAEoCSKIAwoGQ29sdW1uEgwKBG5hbWUYASABKAkSFQoNb3Jp",
            "Z2luYWxfbmFtZRgCIAEoCRIRCglkYXRhX3R5cGUYAyABKAkSEAoIbm90X251",
            "bGwYBCABKAgSEAoIdW5zaWduZWQYBSABKAgSEAoIaXNfYXJyYXkYBiABKAgS",
            "EgoKYXJyYXlfZGltcxgHIAEoBRIPCgdjb21tZW50GAggASgJEg4KBmxlbmd0",
            "aBgJIAEoBRIWCg5pc19uYW1lZF9wYXJhbRgKIAEoCBIUCgxpc19mdW5jX2Nh",
            "bGwYCyABKAgSDQoFc2NvcGUYDCABKAkSIwoFdGFibGUYDSABKAsyFC5hbmFs",
            "eXNpcy5JZGVudGlmaWVyEhMKC3RhYmxlX2FsaWFzGA4gASgJEiIKBHR5cGUY",
            "DyABKAsyFC5hbmFseXNpcy5JZGVudGlmaWVyEikKC2VtYmVkX3RhYmxlGBAg",
            "ASgLMhQuYW5hbHlzaXMuSWRlbnRpZmllchIVCg1pc19zcWxjX3NsaWNlGBEg",
            "ASgIIj0KCVBhcmFtZXRlchIOCgZudW1iZXIYASABKAUSIAoGY29sdW1uGAIg",
            "ASgLMhAuYW5hbHlzaXMuQ29sdW1uIlIKCEFuYWx5c2lzEiEKB2NvbHVtbnMY",
            "ASADKAsyEC5hbmFseXNpcy5Db2x1bW4SIwoGcGFyYW1zGAIgAygLMhMuYW5h",
            "bHlzaXMuUGFyYW1ldGVyYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Analysis.Identifier), global::Analysis.Identifier.Parser, new[]{ "Catalog", "Schema", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Analysis.Column), global::Analysis.Column.Parser, new[]{ "Name", "OriginalName", "DataType", "NotNull", "Unsigned", "IsArray", "ArrayDims", "Comment", "Length", "IsNamedParam", "IsFuncCall", "Scope", "Table", "TableAlias", "Type", "EmbedTable", "IsSqlcSlice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Analysis.Parameter), global::Analysis.Parameter.Parser, new[]{ "Number", "Column" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Analysis.Analysis), global::Analysis.Analysis.Parser, new[]{ "Columns", "Params" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Identifier : pb::IMessage<Identifier>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Identifier> _parser = new pb::MessageParser<Identifier>(() => new Identifier());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Identifier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Analysis.AnalysisReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Identifier() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Identifier(Identifier other) : this() {
      catalog_ = other.catalog_;
      schema_ = other.schema_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Identifier Clone() {
      return new Identifier(this);
    }

    /// <summary>Field number for the "catalog" field.</summary>
    public const int CatalogFieldNumber = 1;
    private string catalog_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Catalog {
      get { return catalog_; }
      set {
        catalog_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "schema" field.</summary>
    public const int SchemaFieldNumber = 2;
    private string schema_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Schema {
      get { return schema_; }
      set {
        schema_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Identifier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Identifier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Catalog != other.Catalog) return false;
      if (Schema != other.Schema) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Catalog.Length != 0) hash ^= Catalog.GetHashCode();
      if (Schema.Length != 0) hash ^= Schema.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Catalog.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Catalog);
      }
      if (Schema.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Schema);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Catalog.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Catalog);
      }
      if (Schema.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Schema);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Catalog.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Catalog);
      }
      if (Schema.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Schema);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Identifier other) {
      if (other == null) {
        return;
      }
      if (other.Catalog.Length != 0) {
        Catalog = other.Catalog;
      }
      if (other.Schema.Length != 0) {
        Schema = other.Schema;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Catalog = input.ReadString();
            break;
          }
          case 18: {
            Schema = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Catalog = input.ReadString();
            break;
          }
          case 18: {
            Schema = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Column : pb::IMessage<Column>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Column> _parser = new pb::MessageParser<Column>(() => new Column());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Column> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Analysis.AnalysisReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column(Column other) : this() {
      name_ = other.name_;
      originalName_ = other.originalName_;
      dataType_ = other.dataType_;
      notNull_ = other.notNull_;
      unsigned_ = other.unsigned_;
      isArray_ = other.isArray_;
      arrayDims_ = other.arrayDims_;
      comment_ = other.comment_;
      length_ = other.length_;
      isNamedParam_ = other.isNamedParam_;
      isFuncCall_ = other.isFuncCall_;
      scope_ = other.scope_;
      table_ = other.table_ != null ? other.table_.Clone() : null;
      tableAlias_ = other.tableAlias_;
      type_ = other.type_ != null ? other.type_.Clone() : null;
      embedTable_ = other.embedTable_ != null ? other.embedTable_.Clone() : null;
      isSqlcSlice_ = other.isSqlcSlice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Column Clone() {
      return new Column(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "original_name" field.</summary>
    public const int OriginalNameFieldNumber = 2;
    private string originalName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OriginalName {
      get { return originalName_; }
      set {
        originalName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data_type" field.</summary>
    public const int DataTypeFieldNumber = 3;
    private string dataType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DataType {
      get { return dataType_; }
      set {
        dataType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "not_null" field.</summary>
    public const int NotNullFieldNumber = 4;
    private bool notNull_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NotNull {
      get { return notNull_; }
      set {
        notNull_ = value;
      }
    }

    /// <summary>Field number for the "unsigned" field.</summary>
    public const int UnsignedFieldNumber = 5;
    private bool unsigned_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Unsigned {
      get { return unsigned_; }
      set {
        unsigned_ = value;
      }
    }

    /// <summary>Field number for the "is_array" field.</summary>
    public const int IsArrayFieldNumber = 6;
    private bool isArray_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsArray {
      get { return isArray_; }
      set {
        isArray_ = value;
      }
    }

    /// <summary>Field number for the "array_dims" field.</summary>
    public const int ArrayDimsFieldNumber = 7;
    private int arrayDims_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ArrayDims {
      get { return arrayDims_; }
      set {
        arrayDims_ = value;
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 8;
    private string comment_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 9;
    private int length_;
    /// <summary>
    /// *int
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    /// <summary>Field number for the "is_named_param" field.</summary>
    public const int IsNamedParamFieldNumber = 10;
    private bool isNamedParam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsNamedParam {
      get { return isNamedParam_; }
      set {
        isNamedParam_ = value;
      }
    }

    /// <summary>Field number for the "is_func_call" field.</summary>
    public const int IsFuncCallFieldNumber = 11;
    private bool isFuncCall_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsFuncCall {
      get { return isFuncCall_; }
      set {
        isFuncCall_ = value;
      }
    }

    /// <summary>Field number for the "scope" field.</summary>
    public const int ScopeFieldNumber = 12;
    private string scope_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Scope {
      get { return scope_; }
      set {
        scope_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "table" field.</summary>
    public const int TableFieldNumber = 13;
    private global::Analysis.Identifier table_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Analysis.Identifier Table {
      get { return table_; }
      set {
        table_ = value;
      }
    }

    /// <summary>Field number for the "table_alias" field.</summary>
    public const int TableAliasFieldNumber = 14;
    private string tableAlias_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TableAlias {
      get { return tableAlias_; }
      set {
        tableAlias_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 15;
    private global::Analysis.Identifier type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Analysis.Identifier Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "embed_table" field.</summary>
    public const int EmbedTableFieldNumber = 16;
    private global::Analysis.Identifier embedTable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Analysis.Identifier EmbedTable {
      get { return embedTable_; }
      set {
        embedTable_ = value;
      }
    }

    /// <summary>Field number for the "is_sqlc_slice" field.</summary>
    public const int IsSqlcSliceFieldNumber = 17;
    private bool isSqlcSlice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsSqlcSlice {
      get { return isSqlcSlice_; }
      set {
        isSqlcSlice_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Column);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Column other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (OriginalName != other.OriginalName) return false;
      if (DataType != other.DataType) return false;
      if (NotNull != other.NotNull) return false;
      if (Unsigned != other.Unsigned) return false;
      if (IsArray != other.IsArray) return false;
      if (ArrayDims != other.ArrayDims) return false;
      if (Comment != other.Comment) return false;
      if (Length != other.Length) return false;
      if (IsNamedParam != other.IsNamedParam) return false;
      if (IsFuncCall != other.IsFuncCall) return false;
      if (Scope != other.Scope) return false;
      if (!object.Equals(Table, other.Table)) return false;
      if (TableAlias != other.TableAlias) return false;
      if (!object.Equals(Type, other.Type)) return false;
      if (!object.Equals(EmbedTable, other.EmbedTable)) return false;
      if (IsSqlcSlice != other.IsSqlcSlice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (OriginalName.Length != 0) hash ^= OriginalName.GetHashCode();
      if (DataType.Length != 0) hash ^= DataType.GetHashCode();
      if (NotNull != false) hash ^= NotNull.GetHashCode();
      if (Unsigned != false) hash ^= Unsigned.GetHashCode();
      if (IsArray != false) hash ^= IsArray.GetHashCode();
      if (ArrayDims != 0) hash ^= ArrayDims.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (Length != 0) hash ^= Length.GetHashCode();
      if (IsNamedParam != false) hash ^= IsNamedParam.GetHashCode();
      if (IsFuncCall != false) hash ^= IsFuncCall.GetHashCode();
      if (Scope.Length != 0) hash ^= Scope.GetHashCode();
      if (table_ != null) hash ^= Table.GetHashCode();
      if (TableAlias.Length != 0) hash ^= TableAlias.GetHashCode();
      if (type_ != null) hash ^= Type.GetHashCode();
      if (embedTable_ != null) hash ^= EmbedTable.GetHashCode();
      if (IsSqlcSlice != false) hash ^= IsSqlcSlice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (OriginalName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OriginalName);
      }
      if (DataType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DataType);
      }
      if (NotNull != false) {
        output.WriteRawTag(32);
        output.WriteBool(NotNull);
      }
      if (Unsigned != false) {
        output.WriteRawTag(40);
        output.WriteBool(Unsigned);
      }
      if (IsArray != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsArray);
      }
      if (ArrayDims != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ArrayDims);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Comment);
      }
      if (Length != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Length);
      }
      if (IsNamedParam != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsNamedParam);
      }
      if (IsFuncCall != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsFuncCall);
      }
      if (Scope.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Scope);
      }
      if (table_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Table);
      }
      if (TableAlias.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(TableAlias);
      }
      if (type_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Type);
      }
      if (embedTable_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(EmbedTable);
      }
      if (IsSqlcSlice != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(IsSqlcSlice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (OriginalName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OriginalName);
      }
      if (DataType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DataType);
      }
      if (NotNull != false) {
        output.WriteRawTag(32);
        output.WriteBool(NotNull);
      }
      if (Unsigned != false) {
        output.WriteRawTag(40);
        output.WriteBool(Unsigned);
      }
      if (IsArray != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsArray);
      }
      if (ArrayDims != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ArrayDims);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Comment);
      }
      if (Length != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Length);
      }
      if (IsNamedParam != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsNamedParam);
      }
      if (IsFuncCall != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsFuncCall);
      }
      if (Scope.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Scope);
      }
      if (table_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Table);
      }
      if (TableAlias.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(TableAlias);
      }
      if (type_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Type);
      }
      if (embedTable_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(EmbedTable);
      }
      if (IsSqlcSlice != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(IsSqlcSlice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (OriginalName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalName);
      }
      if (DataType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DataType);
      }
      if (NotNull != false) {
        size += 1 + 1;
      }
      if (Unsigned != false) {
        size += 1 + 1;
      }
      if (IsArray != false) {
        size += 1 + 1;
      }
      if (ArrayDims != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ArrayDims);
      }
      if (Comment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Length);
      }
      if (IsNamedParam != false) {
        size += 1 + 1;
      }
      if (IsFuncCall != false) {
        size += 1 + 1;
      }
      if (Scope.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Scope);
      }
      if (table_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Table);
      }
      if (TableAlias.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableAlias);
      }
      if (type_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Type);
      }
      if (embedTable_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EmbedTable);
      }
      if (IsSqlcSlice != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Column other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.OriginalName.Length != 0) {
        OriginalName = other.OriginalName;
      }
      if (other.DataType.Length != 0) {
        DataType = other.DataType;
      }
      if (other.NotNull != false) {
        NotNull = other.NotNull;
      }
      if (other.Unsigned != false) {
        Unsigned = other.Unsigned;
      }
      if (other.IsArray != false) {
        IsArray = other.IsArray;
      }
      if (other.ArrayDims != 0) {
        ArrayDims = other.ArrayDims;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      if (other.Length != 0) {
        Length = other.Length;
      }
      if (other.IsNamedParam != false) {
        IsNamedParam = other.IsNamedParam;
      }
      if (other.IsFuncCall != false) {
        IsFuncCall = other.IsFuncCall;
      }
      if (other.Scope.Length != 0) {
        Scope = other.Scope;
      }
      if (other.table_ != null) {
        if (table_ == null) {
          Table = new global::Analysis.Identifier();
        }
        Table.MergeFrom(other.Table);
      }
      if (other.TableAlias.Length != 0) {
        TableAlias = other.TableAlias;
      }
      if (other.type_ != null) {
        if (type_ == null) {
          Type = new global::Analysis.Identifier();
        }
        Type.MergeFrom(other.Type);
      }
      if (other.embedTable_ != null) {
        if (embedTable_ == null) {
          EmbedTable = new global::Analysis.Identifier();
        }
        EmbedTable.MergeFrom(other.EmbedTable);
      }
      if (other.IsSqlcSlice != false) {
        IsSqlcSlice = other.IsSqlcSlice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            OriginalName = input.ReadString();
            break;
          }
          case 26: {
            DataType = input.ReadString();
            break;
          }
          case 32: {
            NotNull = input.ReadBool();
            break;
          }
          case 40: {
            Unsigned = input.ReadBool();
            break;
          }
          case 48: {
            IsArray = input.ReadBool();
            break;
          }
          case 56: {
            ArrayDims = input.ReadInt32();
            break;
          }
          case 66: {
            Comment = input.ReadString();
            break;
          }
          case 72: {
            Length = input.ReadInt32();
            break;
          }
          case 80: {
            IsNamedParam = input.ReadBool();
            break;
          }
          case 88: {
            IsFuncCall = input.ReadBool();
            break;
          }
          case 98: {
            Scope = input.ReadString();
            break;
          }
          case 106: {
            if (table_ == null) {
              Table = new global::Analysis.Identifier();
            }
            input.ReadMessage(Table);
            break;
          }
          case 114: {
            TableAlias = input.ReadString();
            break;
          }
          case 122: {
            if (type_ == null) {
              Type = new global::Analysis.Identifier();
            }
            input.ReadMessage(Type);
            break;
          }
          case 130: {
            if (embedTable_ == null) {
              EmbedTable = new global::Analysis.Identifier();
            }
            input.ReadMessage(EmbedTable);
            break;
          }
          case 136: {
            IsSqlcSlice = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            OriginalName = input.ReadString();
            break;
          }
          case 26: {
            DataType = input.ReadString();
            break;
          }
          case 32: {
            NotNull = input.ReadBool();
            break;
          }
          case 40: {
            Unsigned = input.ReadBool();
            break;
          }
          case 48: {
            IsArray = input.ReadBool();
            break;
          }
          case 56: {
            ArrayDims = input.ReadInt32();
            break;
          }
          case 66: {
            Comment = input.ReadString();
            break;
          }
          case 72: {
            Length = input.ReadInt32();
            break;
          }
          case 80: {
            IsNamedParam = input.ReadBool();
            break;
          }
          case 88: {
            IsFuncCall = input.ReadBool();
            break;
          }
          case 98: {
            Scope = input.ReadString();
            break;
          }
          case 106: {
            if (table_ == null) {
              Table = new global::Analysis.Identifier();
            }
            input.ReadMessage(Table);
            break;
          }
          case 114: {
            TableAlias = input.ReadString();
            break;
          }
          case 122: {
            if (type_ == null) {
              Type = new global::Analysis.Identifier();
            }
            input.ReadMessage(Type);
            break;
          }
          case 130: {
            if (embedTable_ == null) {
              EmbedTable = new global::Analysis.Identifier();
            }
            input.ReadMessage(EmbedTable);
            break;
          }
          case 136: {
            IsSqlcSlice = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Parameter : pb::IMessage<Parameter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Parameter> _parser = new pb::MessageParser<Parameter>(() => new Parameter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Parameter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Analysis.AnalysisReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Parameter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Parameter(Parameter other) : this() {
      number_ = other.number_;
      column_ = other.column_ != null ? other.column_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Parameter Clone() {
      return new Parameter(this);
    }

    /// <summary>Field number for the "number" field.</summary>
    public const int NumberFieldNumber = 1;
    private int number_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Number {
      get { return number_; }
      set {
        number_ = value;
      }
    }

    /// <summary>Field number for the "column" field.</summary>
    public const int ColumnFieldNumber = 2;
    private global::Analysis.Column column_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Analysis.Column Column {
      get { return column_; }
      set {
        column_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Parameter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Parameter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Number != other.Number) return false;
      if (!object.Equals(Column, other.Column)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Number != 0) hash ^= Number.GetHashCode();
      if (column_ != null) hash ^= Column.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Number != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Number);
      }
      if (column_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Column);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Number != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Number);
      }
      if (column_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Column);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Number != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Number);
      }
      if (column_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Column);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Parameter other) {
      if (other == null) {
        return;
      }
      if (other.Number != 0) {
        Number = other.Number;
      }
      if (other.column_ != null) {
        if (column_ == null) {
          Column = new global::Analysis.Column();
        }
        Column.MergeFrom(other.Column);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Number = input.ReadInt32();
            break;
          }
          case 18: {
            if (column_ == null) {
              Column = new global::Analysis.Column();
            }
            input.ReadMessage(Column);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Number = input.ReadInt32();
            break;
          }
          case 18: {
            if (column_ == null) {
              Column = new global::Analysis.Column();
            }
            input.ReadMessage(Column);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Analysis : pb::IMessage<Analysis>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Analysis> _parser = new pb::MessageParser<Analysis>(() => new Analysis());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Analysis> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Analysis.AnalysisReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Analysis() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Analysis(Analysis other) : this() {
      columns_ = other.columns_.Clone();
      params_ = other.params_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Analysis Clone() {
      return new Analysis(this);
    }

    /// <summary>Field number for the "columns" field.</summary>
    public const int ColumnsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Analysis.Column> _repeated_columns_codec
        = pb::FieldCodec.ForMessage(10, global::Analysis.Column.Parser);
    private readonly pbc::RepeatedField<global::Analysis.Column> columns_ = new pbc::RepeatedField<global::Analysis.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Analysis.Column> Columns {
      get { return columns_; }
    }

    /// <summary>Field number for the "params" field.</summary>
    public const int ParamsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Analysis.Parameter> _repeated_params_codec
        = pb::FieldCodec.ForMessage(18, global::Analysis.Parameter.Parser);
    private readonly pbc::RepeatedField<global::Analysis.Parameter> params_ = new pbc::RepeatedField<global::Analysis.Parameter>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Analysis.Parameter> Params {
      get { return params_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Analysis);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Analysis other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!columns_.Equals(other.columns_)) return false;
      if(!params_.Equals(other.params_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= columns_.GetHashCode();
      hash ^= params_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      columns_.WriteTo(output, _repeated_columns_codec);
      params_.WriteTo(output, _repeated_params_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      columns_.WriteTo(ref output, _repeated_columns_codec);
      params_.WriteTo(ref output, _repeated_params_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += columns_.CalculateSize(_repeated_columns_codec);
      size += params_.CalculateSize(_repeated_params_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Analysis other) {
      if (other == null) {
        return;
      }
      columns_.Add(other.columns_);
      params_.Add(other.params_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            columns_.AddEntriesFrom(input, _repeated_columns_codec);
            break;
          }
          case 18: {
            params_.AddEntriesFrom(input, _repeated_params_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            columns_.AddEntriesFrom(ref input, _repeated_columns_codec);
            break;
          }
          case 18: {
            params_.AddEntriesFrom(ref input, _repeated_params_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
