// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/vet/vet.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Vet {

  /// <summary>Holder for reflection information generated from protos/vet/vet.proto</summary>
  public static partial class VetReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/vet/vet.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VetReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRwcm90b3MvdmV0L3ZldC5wcm90bxIDdmV0IiMKCVBhcmFtZXRlchIWCgZu",
            "dW1iZXIYASABKAVSBm51bWJlciJsCgZDb25maWcSGAoHdmVyc2lvbhgBIAEo",
            "CVIHdmVyc2lvbhIWCgZlbmdpbmUYAiABKAlSBmVuZ2luZRIWCgZzY2hlbWEY",
            "AyADKAlSBnNjaGVtYRIYCgdxdWVyaWVzGAQgAygJUgdxdWVyaWVzImsKBVF1",
            "ZXJ5EhAKA3NxbBgBIAEoCVIDc3FsEhIKBG5hbWUYAiABKAlSBG5hbWUSEAoD",
            "Y21kGAMgASgJUgNjbWQSKgoGcGFyYW1zGAQgAygLMg4udmV0LlBhcmFtZXRl",
            "clIKcGFyYW1ldGVycyI1CgpQb3N0Z3JlU1FMEicKB2V4cGxhaW4YASABKAsy",
            "Fi52ZXQuUG9zdGdyZVNRTEV4cGxhaW4igQ8KEVBvc3RncmVTUUxFeHBsYWlu",
            "Ei8KBHBsYW4YASABKAsyGy52ZXQuUG9zdGdyZVNRTEV4cGxhaW4uUGxhblIE",
            "UGxhbhJACghzZXR0aW5ncxgCIAMoCzIkLnZldC5Qb3N0Z3JlU1FMRXhwbGFp",
            "bi5TZXR0aW5nc0VudHJ5UghTZXR0aW5ncxI7CghwbGFubmluZxgDIAEoCzIf",
            "LnZldC5Qb3N0Z3JlU1FMRXhwbGFpbi5QbGFubmluZ1IIUGxhbm5pbmcaLwoN",
            "U2V0dGluZ3NFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgB",
            "GpMJCgRQbGFuEhwKCW5vZGVfdHlwZRgBIAEoCVIJTm9kZSBUeXBlEjAKE3Bh",
            "cmVudF9yZWxhdGlvbnNoaXAYAiABKAlSE1BhcmVudCBSZWxhdGlvbnNoaXAS",
            "JAoNcmVsYXRpb25fbmFtZRgDIAEoCVINUmVsYXRpb24gTmFtZRIWCgZzY2hl",
            "bWEYBCABKAlSBlNjaGVtYRIUCgVhbGlhcxgFIAEoCVIFQWxpYXMSJgoOcGFy",
            "YWxsZWxfYXdhcmUYBiABKAhSDlBhcmFsbGVsIEF3YXJlEiQKDWFzeW5jX2Nh",
            "cGFibGUYByABKAhSDUFzeW5jIENhcGFibGUSIgoMc3RhcnR1cF9jb3N0GAgg",
            "ASgCUgxTdGFydHVwIENvc3QSHgoKdG90YWxfY29zdBgJIAEoAlIKVG90YWwg",
            "Q29zdBIcCglwbGFuX3Jvd3MYCiABKARSCVBsYW4gUm93cxIeCgpwbGFuX3dp",
            "ZHRoGAsgASgEUgpQbGFuIFdpZHRoEhYKBm91dHB1dBgMIAMoCVIGT3V0cHV0",
            "EjEKBXBsYW5zGA0gAygLMhsudmV0LlBvc3RncmVTUUxFeHBsYWluLlBsYW5S",
            "BVBsYW5zEiwKEXNoYXJlZF9oaXRfYmxvY2tzGA4gASgEUhFTaGFyZWQgSGl0",
            "IEJsb2NrcxIuChJzaGFyZWRfcmVhZF9ibG9ja3MYDyABKARSElNoYXJlZCBS",
            "ZWFkIEJsb2NrcxI0ChVzaGFyZWRfZGlydGllZF9ibG9ja3MYECABKARSFVNo",
            "YXJlZCBEaXJ0aWVkIEJsb2NrcxI0ChVzaGFyZWRfd3JpdHRlbl9ibG9ja3MY",
            "ESABKARSFVNoYXJlZCBXcml0dGVuIEJsb2NrcxIqChBsb2NhbF9oaXRfYmxv",
            "Y2tzGBIgASgEUhBMb2NhbCBIaXQgQmxvY2tzEiwKEWxvY2FsX3JlYWRfYmxv",
            "Y2tzGBMgASgEUhFMb2NhbCBSZWFkIEJsb2NrcxIyChRsb2NhbF9kaXJ0aWVk",
            "X2Jsb2NrcxgUIAEoBFIUTG9jYWwgRGlydGllZCBCbG9ja3MSMgoUbG9jYWxf",
            "d3JpdHRlbl9ibG9ja3MYFSABKARSFExvY2FsIFdyaXR0ZW4gQmxvY2tzEioK",
            "EHRlbXBfcmVhZF9ibG9ja3MYFiABKARSEFRlbXAgUmVhZCBCbG9ja3MSMAoT",
            "dGVtcF93cml0dGVuX2Jsb2NrcxgXIAEoBFITVGVtcCBXcml0dGVuIEJsb2Nr",
            "cxIaCghzb3J0X2tleRgYIAMoCVIIU29ydCBLZXkSHAoJam9pbl90eXBlGBkg",
            "ASgJUglKb2luIFR5cGUSIgoMaW5uZXJfdW5pcXVlGBogASgIUgxJbm5lciBV",
            "bmlxdWUSHAoJaGFzaF9jb25kGBsgASgJUglIYXNoIENvbmQSHgoKaW5kZXhf",
            "bmFtZRgcIAEoCVIKSW5kZXggTmFtZRImCg5zY2FuX2RpcmVjdGlvbhgdIAEo",
            "CVIOU2NhbiBEaXJlY3Rpb24SHgoKaW5kZXhfY29uZBgeIAEoCVIKSW5kZXgg",
            "Q29uZBr0AwoIUGxhbm5pbmcSLAoRc2hhcmVkX2hpdF9ibG9ja3MYASABKARS",
            "EVNoYXJlZCBIaXQgQmxvY2tzEi4KEnNoYXJlZF9yZWFkX2Jsb2NrcxgCIAEo",
            "BFISU2hhcmVkIFJlYWQgQmxvY2tzEjQKFXNoYXJlZF9kaXJ0aWVkX2Jsb2Nr",
            "cxgDIAEoBFIVU2hhcmVkIERpcnRpZWQgQmxvY2tzEjQKFXNoYXJlZF93cml0",
            "dGVuX2Jsb2NrcxgEIAEoBFIVU2hhcmVkIFdyaXR0ZW4gQmxvY2tzEioKEGxv",
            "Y2FsX2hpdF9ibG9ja3MYBSABKARSEExvY2FsIEhpdCBCbG9ja3MSLAoRbG9j",
            "YWxfcmVhZF9ibG9ja3MYBiABKARSEUxvY2FsIFJlYWQgQmxvY2tzEjIKFGxv",
            "Y2FsX2RpcnRpZWRfYmxvY2tzGAcgASgEUhRMb2NhbCBEaXJ0aWVkIEJsb2Nr",
            "cxIyChRsb2NhbF93cml0dGVuX2Jsb2NrcxgIIAEoBFIUTG9jYWwgV3JpdHRl",
            "biBCbG9ja3MSKgoQdGVtcF9yZWFkX2Jsb2NrcxgJIAEoBFIQVGVtcCBSZWFk",
            "IEJsb2NrcxIwChN0ZW1wX3dyaXR0ZW5fYmxvY2tzGAogASgEUhNUZW1wIFdy",
            "aXR0ZW4gQmxvY2tzIisKBU15U1FMEiIKB2V4cGxhaW4YASABKAsyES52ZXQu",
            "TXlTUUxFeHBsYWluIrIICgxNeVNRTEV4cGxhaW4SMQoLcXVlcnlfYmxvY2sY",
            "ASABKAsyHC52ZXQuTXlTUUxFeHBsYWluLlF1ZXJ5QmxvY2savwIKClF1ZXJ5",
            "QmxvY2sSEQoJc2VsZWN0X2lkGAEgASgEEg8KB21lc3NhZ2UYAiABKAkSPQoJ",
            "Y29zdF9pbmZvGAMgAygLMioudmV0Lk15U1FMRXhwbGFpbi5RdWVyeUJsb2Nr",
            "LkNvc3RJbmZvRW50cnkSJgoFdGFibGUYBCABKAsyFy52ZXQuTXlTUUxFeHBs",
            "YWluLlRhYmxlEj8KEm9yZGVyaW5nX29wZXJhdGlvbhgFIAEoCzIjLnZldC5N",
            "eVNRTEV4cGxhaW4uT3JkZXJpbmdPcGVyYXRpb24SNAoLbmVzdGVkX2xvb3AY",
            "BiADKAsyHy52ZXQuTXlTUUxFeHBsYWluLk5lc3RlZExvb3BPYmoaLwoNQ29z",
            "dEluZm9FbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBGvAC",
            "CgVUYWJsZRISCgp0YWJsZV9uYW1lGAEgASgJEhMKC2FjY2Vzc190eXBlGAIg",
            "ASgJEh4KFnJvd3NfZXhhbWluZWRfcGVyX3NjYW4YAyABKAQSHgoWcm93c19w",
            "cm9kdWNlZF9wZXJfam9pbhgEIAEoBBIQCghmaWx0ZXJlZBgFIAEoCRI4Cglj",
            "b3N0X2luZm8YBiADKAsyJS52ZXQuTXlTUUxFeHBsYWluLlRhYmxlLkNvc3RJ",
            "bmZvRW50cnkSFAoMdXNlZF9jb2x1bW5zGAcgAygJEg4KBmluc2VydBgIIAEo",
            "CBIVCg1wb3NzaWJsZV9rZXlzGAkgAygJEgsKA2tleRgKIAEoCRIWCg51c2Vk",
            "X2tleV9wYXJ0cxgLIAMoCRISCgprZXlfbGVuZ3RoGAwgASgJEgsKA3JlZhgN",
            "IAMoCRovCg1Db3N0SW5mb0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgC",
            "IAEoCToCOAEaNwoNTmVzdGVkTG9vcE9iahImCgV0YWJsZRgBIAEoCzIXLnZl",
            "dC5NeVNRTEV4cGxhaW4uVGFibGUagAIKEU9yZGVyaW5nT3BlcmF0aW9uEhYK",
            "DnVzaW5nX2ZpbGVzb3J0GAEgASgIEkQKCWNvc3RfaW5mbxgCIAMoCzIxLnZl",
            "dC5NeVNRTEV4cGxhaW4uT3JkZXJpbmdPcGVyYXRpb24uQ29zdEluZm9FbnRy",
            "eRImCgV0YWJsZRgDIAEoCzIXLnZldC5NeVNRTEV4cGxhaW4uVGFibGUSNAoL",
            "bmVzdGVkX2xvb3AYBCADKAsyHy52ZXQuTXlTUUxFeHBsYWluLk5lc3RlZExv",
            "b3BPYmoaLwoNQ29zdEluZm9FbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUY",
            "AiABKAk6AjgBYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Vet.Parameter), global::Vet.Parameter.Parser, new[]{ "Number" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Vet.Config), global::Vet.Config.Parser, new[]{ "Version", "Engine", "Schema", "Queries" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Vet.Query), global::Vet.Query.Parser, new[]{ "Sql", "Name", "Cmd", "Params" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Vet.PostgreSQL), global::Vet.PostgreSQL.Parser, new[]{ "Explain" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Vet.PostgreSQLExplain), global::Vet.PostgreSQLExplain.Parser, new[]{ "Plan", "Settings", "Planning" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, new pbr::GeneratedClrTypeInfo(typeof(global::Vet.PostgreSQLExplain.Types.Plan), global::Vet.PostgreSQLExplain.Types.Plan.Parser, new[]{ "NodeType", "ParentRelationship", "RelationName", "Schema", "Alias", "ParallelAware", "AsyncCapable", "StartupCost", "TotalCost", "PlanRows", "PlanWidth", "Output", "Plans", "SharedHitBlocks", "SharedReadBlocks", "SharedDirtiedBlocks", "SharedWrittenBlocks", "LocalHitBlocks", "LocalReadBlocks", "LocalDirtiedBlocks", "LocalWrittenBlocks", "TempReadBlocks", "TempWrittenBlocks", "SortKey", "JoinType", "InnerUnique", "HashCond", "IndexName", "ScanDirection", "IndexCond" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Vet.PostgreSQLExplain.Types.Planning), global::Vet.PostgreSQLExplain.Types.Planning.Parser, new[]{ "SharedHitBlocks", "SharedReadBlocks", "SharedDirtiedBlocks", "SharedWrittenBlocks", "LocalHitBlocks", "LocalReadBlocks", "LocalDirtiedBlocks", "LocalWrittenBlocks", "TempReadBlocks", "TempWrittenBlocks" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Vet.MySQL), global::Vet.MySQL.Parser, new[]{ "Explain" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Vet.MySQLExplain), global::Vet.MySQLExplain.Parser, new[]{ "QueryBlock" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Vet.MySQLExplain.Types.QueryBlock), global::Vet.MySQLExplain.Types.QueryBlock.Parser, new[]{ "SelectId", "Message", "CostInfo", "Table", "OrderingOperation", "NestedLoop" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Vet.MySQLExplain.Types.Table), global::Vet.MySQLExplain.Types.Table.Parser, new[]{ "TableName", "AccessType", "RowsExaminedPerScan", "RowsProducedPerJoin", "Filtered", "CostInfo", "UsedColumns", "Insert", "PossibleKeys", "Key", "UsedKeyParts", "KeyLength", "Ref" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Vet.MySQLExplain.Types.NestedLoopObj), global::Vet.MySQLExplain.Types.NestedLoopObj.Parser, new[]{ "Table" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Vet.MySQLExplain.Types.OrderingOperation), global::Vet.MySQLExplain.Types.OrderingOperation.Parser, new[]{ "UsingFilesort", "CostInfo", "Table", "NestedLoop" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })})
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Parameter : pb::IMessage<Parameter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Parameter> _parser = new pb::MessageParser<Parameter>(() => new Parameter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Parameter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vet.VetReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Parameter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Parameter(Parameter other) : this() {
      number_ = other.number_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Parameter Clone() {
      return new Parameter(this);
    }

    /// <summary>Field number for the "number" field.</summary>
    public const int NumberFieldNumber = 1;
    private int number_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Number {
      get { return number_; }
      set {
        number_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Parameter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Parameter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Number != other.Number) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Number != 0) hash ^= Number.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Number != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Number);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Number != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Number);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Number != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Number);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Parameter other) {
      if (other == null) {
        return;
      }
      if (other.Number != 0) {
        Number = other.Number;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Number = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Number = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Config : pb::IMessage<Config>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Config> _parser = new pb::MessageParser<Config>(() => new Config());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Config> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vet.VetReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Config() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Config(Config other) : this() {
      version_ = other.version_;
      engine_ = other.engine_;
      schema_ = other.schema_.Clone();
      queries_ = other.queries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Config Clone() {
      return new Config(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private string version_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "engine" field.</summary>
    public const int EngineFieldNumber = 2;
    private string engine_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Engine {
      get { return engine_; }
      set {
        engine_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "schema" field.</summary>
    public const int SchemaFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_schema_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> schema_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Schema {
      get { return schema_; }
    }

    /// <summary>Field number for the "queries" field.</summary>
    public const int QueriesFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_queries_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> queries_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Queries {
      get { return queries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Config);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Config other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (Engine != other.Engine) return false;
      if(!schema_.Equals(other.schema_)) return false;
      if(!queries_.Equals(other.queries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (Engine.Length != 0) hash ^= Engine.GetHashCode();
      hash ^= schema_.GetHashCode();
      hash ^= queries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Version.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Version);
      }
      if (Engine.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Engine);
      }
      schema_.WriteTo(output, _repeated_schema_codec);
      queries_.WriteTo(output, _repeated_queries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Version.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Version);
      }
      if (Engine.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Engine);
      }
      schema_.WriteTo(ref output, _repeated_schema_codec);
      queries_.WriteTo(ref output, _repeated_queries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (Engine.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Engine);
      }
      size += schema_.CalculateSize(_repeated_schema_codec);
      size += queries_.CalculateSize(_repeated_queries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Config other) {
      if (other == null) {
        return;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.Engine.Length != 0) {
        Engine = other.Engine;
      }
      schema_.Add(other.schema_);
      queries_.Add(other.queries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Version = input.ReadString();
            break;
          }
          case 18: {
            Engine = input.ReadString();
            break;
          }
          case 26: {
            schema_.AddEntriesFrom(input, _repeated_schema_codec);
            break;
          }
          case 34: {
            queries_.AddEntriesFrom(input, _repeated_queries_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Version = input.ReadString();
            break;
          }
          case 18: {
            Engine = input.ReadString();
            break;
          }
          case 26: {
            schema_.AddEntriesFrom(ref input, _repeated_schema_codec);
            break;
          }
          case 34: {
            queries_.AddEntriesFrom(ref input, _repeated_queries_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Query : pb::IMessage<Query>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Query> _parser = new pb::MessageParser<Query>(() => new Query());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Query> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vet.VetReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Query() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Query(Query other) : this() {
      sql_ = other.sql_;
      name_ = other.name_;
      cmd_ = other.cmd_;
      params_ = other.params_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Query Clone() {
      return new Query(this);
    }

    /// <summary>Field number for the "sql" field.</summary>
    public const int SqlFieldNumber = 1;
    private string sql_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Sql {
      get { return sql_; }
      set {
        sql_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cmd" field.</summary>
    public const int CmdFieldNumber = 3;
    private string cmd_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Cmd {
      get { return cmd_; }
      set {
        cmd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "params" field.</summary>
    public const int ParamsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Vet.Parameter> _repeated_params_codec
        = pb::FieldCodec.ForMessage(34, global::Vet.Parameter.Parser);
    private readonly pbc::RepeatedField<global::Vet.Parameter> params_ = new pbc::RepeatedField<global::Vet.Parameter>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Vet.Parameter> Params {
      get { return params_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Query);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Query other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sql != other.Sql) return false;
      if (Name != other.Name) return false;
      if (Cmd != other.Cmd) return false;
      if(!params_.Equals(other.params_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Sql.Length != 0) hash ^= Sql.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Cmd.Length != 0) hash ^= Cmd.GetHashCode();
      hash ^= params_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Sql.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Sql);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Cmd.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Cmd);
      }
      params_.WriteTo(output, _repeated_params_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Sql.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Sql);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Cmd.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Cmd);
      }
      params_.WriteTo(ref output, _repeated_params_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Sql.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sql);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Cmd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cmd);
      }
      size += params_.CalculateSize(_repeated_params_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Query other) {
      if (other == null) {
        return;
      }
      if (other.Sql.Length != 0) {
        Sql = other.Sql;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Cmd.Length != 0) {
        Cmd = other.Cmd;
      }
      params_.Add(other.params_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Sql = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Cmd = input.ReadString();
            break;
          }
          case 34: {
            params_.AddEntriesFrom(input, _repeated_params_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Sql = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Cmd = input.ReadString();
            break;
          }
          case 34: {
            params_.AddEntriesFrom(ref input, _repeated_params_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PostgreSQL : pb::IMessage<PostgreSQL>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PostgreSQL> _parser = new pb::MessageParser<PostgreSQL>(() => new PostgreSQL());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PostgreSQL> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vet.VetReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PostgreSQL() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PostgreSQL(PostgreSQL other) : this() {
      explain_ = other.explain_ != null ? other.explain_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PostgreSQL Clone() {
      return new PostgreSQL(this);
    }

    /// <summary>Field number for the "explain" field.</summary>
    public const int ExplainFieldNumber = 1;
    private global::Vet.PostgreSQLExplain explain_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Vet.PostgreSQLExplain Explain {
      get { return explain_; }
      set {
        explain_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PostgreSQL);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PostgreSQL other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Explain, other.Explain)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (explain_ != null) hash ^= Explain.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (explain_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Explain);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (explain_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Explain);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (explain_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Explain);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PostgreSQL other) {
      if (other == null) {
        return;
      }
      if (other.explain_ != null) {
        if (explain_ == null) {
          Explain = new global::Vet.PostgreSQLExplain();
        }
        Explain.MergeFrom(other.Explain);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (explain_ == null) {
              Explain = new global::Vet.PostgreSQLExplain();
            }
            input.ReadMessage(Explain);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (explain_ == null) {
              Explain = new global::Vet.PostgreSQLExplain();
            }
            input.ReadMessage(Explain);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PostgreSQLExplain : pb::IMessage<PostgreSQLExplain>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PostgreSQLExplain> _parser = new pb::MessageParser<PostgreSQLExplain>(() => new PostgreSQLExplain());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PostgreSQLExplain> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vet.VetReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PostgreSQLExplain() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PostgreSQLExplain(PostgreSQLExplain other) : this() {
      plan_ = other.plan_ != null ? other.plan_.Clone() : null;
      settings_ = other.settings_.Clone();
      planning_ = other.planning_ != null ? other.planning_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PostgreSQLExplain Clone() {
      return new PostgreSQLExplain(this);
    }

    /// <summary>Field number for the "plan" field.</summary>
    public const int PlanFieldNumber = 1;
    private global::Vet.PostgreSQLExplain.Types.Plan plan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Vet.PostgreSQLExplain.Types.Plan Plan {
      get { return plan_; }
      set {
        plan_ = value;
      }
    }

    /// <summary>Field number for the "settings" field.</summary>
    public const int SettingsFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_settings_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 18);
    private readonly pbc::MapField<string, string> settings_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Settings {
      get { return settings_; }
    }

    /// <summary>Field number for the "planning" field.</summary>
    public const int PlanningFieldNumber = 3;
    private global::Vet.PostgreSQLExplain.Types.Planning planning_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Vet.PostgreSQLExplain.Types.Planning Planning {
      get { return planning_; }
      set {
        planning_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PostgreSQLExplain);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PostgreSQLExplain other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Plan, other.Plan)) return false;
      if (!Settings.Equals(other.Settings)) return false;
      if (!object.Equals(Planning, other.Planning)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (plan_ != null) hash ^= Plan.GetHashCode();
      hash ^= Settings.GetHashCode();
      if (planning_ != null) hash ^= Planning.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (plan_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Plan);
      }
      settings_.WriteTo(output, _map_settings_codec);
      if (planning_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Planning);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (plan_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Plan);
      }
      settings_.WriteTo(ref output, _map_settings_codec);
      if (planning_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Planning);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (plan_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Plan);
      }
      size += settings_.CalculateSize(_map_settings_codec);
      if (planning_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Planning);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PostgreSQLExplain other) {
      if (other == null) {
        return;
      }
      if (other.plan_ != null) {
        if (plan_ == null) {
          Plan = new global::Vet.PostgreSQLExplain.Types.Plan();
        }
        Plan.MergeFrom(other.Plan);
      }
      settings_.MergeFrom(other.settings_);
      if (other.planning_ != null) {
        if (planning_ == null) {
          Planning = new global::Vet.PostgreSQLExplain.Types.Planning();
        }
        Planning.MergeFrom(other.Planning);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (plan_ == null) {
              Plan = new global::Vet.PostgreSQLExplain.Types.Plan();
            }
            input.ReadMessage(Plan);
            break;
          }
          case 18: {
            settings_.AddEntriesFrom(input, _map_settings_codec);
            break;
          }
          case 26: {
            if (planning_ == null) {
              Planning = new global::Vet.PostgreSQLExplain.Types.Planning();
            }
            input.ReadMessage(Planning);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (plan_ == null) {
              Plan = new global::Vet.PostgreSQLExplain.Types.Plan();
            }
            input.ReadMessage(Plan);
            break;
          }
          case 18: {
            settings_.AddEntriesFrom(ref input, _map_settings_codec);
            break;
          }
          case 26: {
            if (planning_ == null) {
              Planning = new global::Vet.PostgreSQLExplain.Types.Planning();
            }
            input.ReadMessage(Planning);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the PostgreSQLExplain message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Plan : pb::IMessage<Plan>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Plan> _parser = new pb::MessageParser<Plan>(() => new Plan());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Plan> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Vet.PostgreSQLExplain.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Plan() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Plan(Plan other) : this() {
          nodeType_ = other.nodeType_;
          parentRelationship_ = other.parentRelationship_;
          relationName_ = other.relationName_;
          schema_ = other.schema_;
          alias_ = other.alias_;
          parallelAware_ = other.parallelAware_;
          asyncCapable_ = other.asyncCapable_;
          startupCost_ = other.startupCost_;
          totalCost_ = other.totalCost_;
          planRows_ = other.planRows_;
          planWidth_ = other.planWidth_;
          output_ = other.output_.Clone();
          plans_ = other.plans_.Clone();
          sharedHitBlocks_ = other.sharedHitBlocks_;
          sharedReadBlocks_ = other.sharedReadBlocks_;
          sharedDirtiedBlocks_ = other.sharedDirtiedBlocks_;
          sharedWrittenBlocks_ = other.sharedWrittenBlocks_;
          localHitBlocks_ = other.localHitBlocks_;
          localReadBlocks_ = other.localReadBlocks_;
          localDirtiedBlocks_ = other.localDirtiedBlocks_;
          localWrittenBlocks_ = other.localWrittenBlocks_;
          tempReadBlocks_ = other.tempReadBlocks_;
          tempWrittenBlocks_ = other.tempWrittenBlocks_;
          sortKey_ = other.sortKey_.Clone();
          joinType_ = other.joinType_;
          innerUnique_ = other.innerUnique_;
          hashCond_ = other.hashCond_;
          indexName_ = other.indexName_;
          scanDirection_ = other.scanDirection_;
          indexCond_ = other.indexCond_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Plan Clone() {
          return new Plan(this);
        }

        /// <summary>Field number for the "node_type" field.</summary>
        public const int NodeTypeFieldNumber = 1;
        private string nodeType_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string NodeType {
          get { return nodeType_; }
          set {
            nodeType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "parent_relationship" field.</summary>
        public const int ParentRelationshipFieldNumber = 2;
        private string parentRelationship_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ParentRelationship {
          get { return parentRelationship_; }
          set {
            parentRelationship_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "relation_name" field.</summary>
        public const int RelationNameFieldNumber = 3;
        private string relationName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string RelationName {
          get { return relationName_; }
          set {
            relationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "schema" field.</summary>
        public const int SchemaFieldNumber = 4;
        private string schema_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Schema {
          get { return schema_; }
          set {
            schema_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "alias" field.</summary>
        public const int AliasFieldNumber = 5;
        private string alias_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Alias {
          get { return alias_; }
          set {
            alias_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "parallel_aware" field.</summary>
        public const int ParallelAwareFieldNumber = 6;
        private bool parallelAware_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool ParallelAware {
          get { return parallelAware_; }
          set {
            parallelAware_ = value;
          }
        }

        /// <summary>Field number for the "async_capable" field.</summary>
        public const int AsyncCapableFieldNumber = 7;
        private bool asyncCapable_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool AsyncCapable {
          get { return asyncCapable_; }
          set {
            asyncCapable_ = value;
          }
        }

        /// <summary>Field number for the "startup_cost" field.</summary>
        public const int StartupCostFieldNumber = 8;
        private float startupCost_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float StartupCost {
          get { return startupCost_; }
          set {
            startupCost_ = value;
          }
        }

        /// <summary>Field number for the "total_cost" field.</summary>
        public const int TotalCostFieldNumber = 9;
        private float totalCost_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float TotalCost {
          get { return totalCost_; }
          set {
            totalCost_ = value;
          }
        }

        /// <summary>Field number for the "plan_rows" field.</summary>
        public const int PlanRowsFieldNumber = 10;
        private ulong planRows_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong PlanRows {
          get { return planRows_; }
          set {
            planRows_ = value;
          }
        }

        /// <summary>Field number for the "plan_width" field.</summary>
        public const int PlanWidthFieldNumber = 11;
        private ulong planWidth_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong PlanWidth {
          get { return planWidth_; }
          set {
            planWidth_ = value;
          }
        }

        /// <summary>Field number for the "output" field.</summary>
        public const int OutputFieldNumber = 12;
        private static readonly pb::FieldCodec<string> _repeated_output_codec
            = pb::FieldCodec.ForString(98);
        private readonly pbc::RepeatedField<string> output_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> Output {
          get { return output_; }
        }

        /// <summary>Field number for the "plans" field.</summary>
        public const int PlansFieldNumber = 13;
        private static readonly pb::FieldCodec<global::Vet.PostgreSQLExplain.Types.Plan> _repeated_plans_codec
            = pb::FieldCodec.ForMessage(106, global::Vet.PostgreSQLExplain.Types.Plan.Parser);
        private readonly pbc::RepeatedField<global::Vet.PostgreSQLExplain.Types.Plan> plans_ = new pbc::RepeatedField<global::Vet.PostgreSQLExplain.Types.Plan>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Vet.PostgreSQLExplain.Types.Plan> Plans {
          get { return plans_; }
        }

        /// <summary>Field number for the "shared_hit_blocks" field.</summary>
        public const int SharedHitBlocksFieldNumber = 14;
        private ulong sharedHitBlocks_;
        /// <summary>
        /// Embedded "Blocks" fields
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong SharedHitBlocks {
          get { return sharedHitBlocks_; }
          set {
            sharedHitBlocks_ = value;
          }
        }

        /// <summary>Field number for the "shared_read_blocks" field.</summary>
        public const int SharedReadBlocksFieldNumber = 15;
        private ulong sharedReadBlocks_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong SharedReadBlocks {
          get { return sharedReadBlocks_; }
          set {
            sharedReadBlocks_ = value;
          }
        }

        /// <summary>Field number for the "shared_dirtied_blocks" field.</summary>
        public const int SharedDirtiedBlocksFieldNumber = 16;
        private ulong sharedDirtiedBlocks_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong SharedDirtiedBlocks {
          get { return sharedDirtiedBlocks_; }
          set {
            sharedDirtiedBlocks_ = value;
          }
        }

        /// <summary>Field number for the "shared_written_blocks" field.</summary>
        public const int SharedWrittenBlocksFieldNumber = 17;
        private ulong sharedWrittenBlocks_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong SharedWrittenBlocks {
          get { return sharedWrittenBlocks_; }
          set {
            sharedWrittenBlocks_ = value;
          }
        }

        /// <summary>Field number for the "local_hit_blocks" field.</summary>
        public const int LocalHitBlocksFieldNumber = 18;
        private ulong localHitBlocks_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong LocalHitBlocks {
          get { return localHitBlocks_; }
          set {
            localHitBlocks_ = value;
          }
        }

        /// <summary>Field number for the "local_read_blocks" field.</summary>
        public const int LocalReadBlocksFieldNumber = 19;
        private ulong localReadBlocks_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong LocalReadBlocks {
          get { return localReadBlocks_; }
          set {
            localReadBlocks_ = value;
          }
        }

        /// <summary>Field number for the "local_dirtied_blocks" field.</summary>
        public const int LocalDirtiedBlocksFieldNumber = 20;
        private ulong localDirtiedBlocks_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong LocalDirtiedBlocks {
          get { return localDirtiedBlocks_; }
          set {
            localDirtiedBlocks_ = value;
          }
        }

        /// <summary>Field number for the "local_written_blocks" field.</summary>
        public const int LocalWrittenBlocksFieldNumber = 21;
        private ulong localWrittenBlocks_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong LocalWrittenBlocks {
          get { return localWrittenBlocks_; }
          set {
            localWrittenBlocks_ = value;
          }
        }

        /// <summary>Field number for the "temp_read_blocks" field.</summary>
        public const int TempReadBlocksFieldNumber = 22;
        private ulong tempReadBlocks_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong TempReadBlocks {
          get { return tempReadBlocks_; }
          set {
            tempReadBlocks_ = value;
          }
        }

        /// <summary>Field number for the "temp_written_blocks" field.</summary>
        public const int TempWrittenBlocksFieldNumber = 23;
        private ulong tempWrittenBlocks_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong TempWrittenBlocks {
          get { return tempWrittenBlocks_; }
          set {
            tempWrittenBlocks_ = value;
          }
        }

        /// <summary>Field number for the "sort_key" field.</summary>
        public const int SortKeyFieldNumber = 24;
        private static readonly pb::FieldCodec<string> _repeated_sortKey_codec
            = pb::FieldCodec.ForString(194);
        private readonly pbc::RepeatedField<string> sortKey_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// "Node Type": "Sort" fields
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> SortKey {
          get { return sortKey_; }
        }

        /// <summary>Field number for the "join_type" field.</summary>
        public const int JoinTypeFieldNumber = 25;
        private string joinType_ = "";
        /// <summary>
        /// "Node Type": "Hash Join" fields
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string JoinType {
          get { return joinType_; }
          set {
            joinType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "inner_unique" field.</summary>
        public const int InnerUniqueFieldNumber = 26;
        private bool innerUnique_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool InnerUnique {
          get { return innerUnique_; }
          set {
            innerUnique_ = value;
          }
        }

        /// <summary>Field number for the "hash_cond" field.</summary>
        public const int HashCondFieldNumber = 27;
        private string hashCond_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string HashCond {
          get { return hashCond_; }
          set {
            hashCond_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "index_name" field.</summary>
        public const int IndexNameFieldNumber = 28;
        private string indexName_ = "";
        /// <summary>
        /// "Node Type": "Index Scan" fields
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string IndexName {
          get { return indexName_; }
          set {
            indexName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "scan_direction" field.</summary>
        public const int ScanDirectionFieldNumber = 29;
        private string scanDirection_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ScanDirection {
          get { return scanDirection_; }
          set {
            scanDirection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "index_cond" field.</summary>
        public const int IndexCondFieldNumber = 30;
        private string indexCond_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string IndexCond {
          get { return indexCond_; }
          set {
            indexCond_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Plan);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Plan other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (NodeType != other.NodeType) return false;
          if (ParentRelationship != other.ParentRelationship) return false;
          if (RelationName != other.RelationName) return false;
          if (Schema != other.Schema) return false;
          if (Alias != other.Alias) return false;
          if (ParallelAware != other.ParallelAware) return false;
          if (AsyncCapable != other.AsyncCapable) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(StartupCost, other.StartupCost)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TotalCost, other.TotalCost)) return false;
          if (PlanRows != other.PlanRows) return false;
          if (PlanWidth != other.PlanWidth) return false;
          if(!output_.Equals(other.output_)) return false;
          if(!plans_.Equals(other.plans_)) return false;
          if (SharedHitBlocks != other.SharedHitBlocks) return false;
          if (SharedReadBlocks != other.SharedReadBlocks) return false;
          if (SharedDirtiedBlocks != other.SharedDirtiedBlocks) return false;
          if (SharedWrittenBlocks != other.SharedWrittenBlocks) return false;
          if (LocalHitBlocks != other.LocalHitBlocks) return false;
          if (LocalReadBlocks != other.LocalReadBlocks) return false;
          if (LocalDirtiedBlocks != other.LocalDirtiedBlocks) return false;
          if (LocalWrittenBlocks != other.LocalWrittenBlocks) return false;
          if (TempReadBlocks != other.TempReadBlocks) return false;
          if (TempWrittenBlocks != other.TempWrittenBlocks) return false;
          if(!sortKey_.Equals(other.sortKey_)) return false;
          if (JoinType != other.JoinType) return false;
          if (InnerUnique != other.InnerUnique) return false;
          if (HashCond != other.HashCond) return false;
          if (IndexName != other.IndexName) return false;
          if (ScanDirection != other.ScanDirection) return false;
          if (IndexCond != other.IndexCond) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (NodeType.Length != 0) hash ^= NodeType.GetHashCode();
          if (ParentRelationship.Length != 0) hash ^= ParentRelationship.GetHashCode();
          if (RelationName.Length != 0) hash ^= RelationName.GetHashCode();
          if (Schema.Length != 0) hash ^= Schema.GetHashCode();
          if (Alias.Length != 0) hash ^= Alias.GetHashCode();
          if (ParallelAware != false) hash ^= ParallelAware.GetHashCode();
          if (AsyncCapable != false) hash ^= AsyncCapable.GetHashCode();
          if (StartupCost != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(StartupCost);
          if (TotalCost != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TotalCost);
          if (PlanRows != 0UL) hash ^= PlanRows.GetHashCode();
          if (PlanWidth != 0UL) hash ^= PlanWidth.GetHashCode();
          hash ^= output_.GetHashCode();
          hash ^= plans_.GetHashCode();
          if (SharedHitBlocks != 0UL) hash ^= SharedHitBlocks.GetHashCode();
          if (SharedReadBlocks != 0UL) hash ^= SharedReadBlocks.GetHashCode();
          if (SharedDirtiedBlocks != 0UL) hash ^= SharedDirtiedBlocks.GetHashCode();
          if (SharedWrittenBlocks != 0UL) hash ^= SharedWrittenBlocks.GetHashCode();
          if (LocalHitBlocks != 0UL) hash ^= LocalHitBlocks.GetHashCode();
          if (LocalReadBlocks != 0UL) hash ^= LocalReadBlocks.GetHashCode();
          if (LocalDirtiedBlocks != 0UL) hash ^= LocalDirtiedBlocks.GetHashCode();
          if (LocalWrittenBlocks != 0UL) hash ^= LocalWrittenBlocks.GetHashCode();
          if (TempReadBlocks != 0UL) hash ^= TempReadBlocks.GetHashCode();
          if (TempWrittenBlocks != 0UL) hash ^= TempWrittenBlocks.GetHashCode();
          hash ^= sortKey_.GetHashCode();
          if (JoinType.Length != 0) hash ^= JoinType.GetHashCode();
          if (InnerUnique != false) hash ^= InnerUnique.GetHashCode();
          if (HashCond.Length != 0) hash ^= HashCond.GetHashCode();
          if (IndexName.Length != 0) hash ^= IndexName.GetHashCode();
          if (ScanDirection.Length != 0) hash ^= ScanDirection.GetHashCode();
          if (IndexCond.Length != 0) hash ^= IndexCond.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (NodeType.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(NodeType);
          }
          if (ParentRelationship.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ParentRelationship);
          }
          if (RelationName.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(RelationName);
          }
          if (Schema.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Schema);
          }
          if (Alias.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Alias);
          }
          if (ParallelAware != false) {
            output.WriteRawTag(48);
            output.WriteBool(ParallelAware);
          }
          if (AsyncCapable != false) {
            output.WriteRawTag(56);
            output.WriteBool(AsyncCapable);
          }
          if (StartupCost != 0F) {
            output.WriteRawTag(69);
            output.WriteFloat(StartupCost);
          }
          if (TotalCost != 0F) {
            output.WriteRawTag(77);
            output.WriteFloat(TotalCost);
          }
          if (PlanRows != 0UL) {
            output.WriteRawTag(80);
            output.WriteUInt64(PlanRows);
          }
          if (PlanWidth != 0UL) {
            output.WriteRawTag(88);
            output.WriteUInt64(PlanWidth);
          }
          output_.WriteTo(output, _repeated_output_codec);
          plans_.WriteTo(output, _repeated_plans_codec);
          if (SharedHitBlocks != 0UL) {
            output.WriteRawTag(112);
            output.WriteUInt64(SharedHitBlocks);
          }
          if (SharedReadBlocks != 0UL) {
            output.WriteRawTag(120);
            output.WriteUInt64(SharedReadBlocks);
          }
          if (SharedDirtiedBlocks != 0UL) {
            output.WriteRawTag(128, 1);
            output.WriteUInt64(SharedDirtiedBlocks);
          }
          if (SharedWrittenBlocks != 0UL) {
            output.WriteRawTag(136, 1);
            output.WriteUInt64(SharedWrittenBlocks);
          }
          if (LocalHitBlocks != 0UL) {
            output.WriteRawTag(144, 1);
            output.WriteUInt64(LocalHitBlocks);
          }
          if (LocalReadBlocks != 0UL) {
            output.WriteRawTag(152, 1);
            output.WriteUInt64(LocalReadBlocks);
          }
          if (LocalDirtiedBlocks != 0UL) {
            output.WriteRawTag(160, 1);
            output.WriteUInt64(LocalDirtiedBlocks);
          }
          if (LocalWrittenBlocks != 0UL) {
            output.WriteRawTag(168, 1);
            output.WriteUInt64(LocalWrittenBlocks);
          }
          if (TempReadBlocks != 0UL) {
            output.WriteRawTag(176, 1);
            output.WriteUInt64(TempReadBlocks);
          }
          if (TempWrittenBlocks != 0UL) {
            output.WriteRawTag(184, 1);
            output.WriteUInt64(TempWrittenBlocks);
          }
          sortKey_.WriteTo(output, _repeated_sortKey_codec);
          if (JoinType.Length != 0) {
            output.WriteRawTag(202, 1);
            output.WriteString(JoinType);
          }
          if (InnerUnique != false) {
            output.WriteRawTag(208, 1);
            output.WriteBool(InnerUnique);
          }
          if (HashCond.Length != 0) {
            output.WriteRawTag(218, 1);
            output.WriteString(HashCond);
          }
          if (IndexName.Length != 0) {
            output.WriteRawTag(226, 1);
            output.WriteString(IndexName);
          }
          if (ScanDirection.Length != 0) {
            output.WriteRawTag(234, 1);
            output.WriteString(ScanDirection);
          }
          if (IndexCond.Length != 0) {
            output.WriteRawTag(242, 1);
            output.WriteString(IndexCond);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (NodeType.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(NodeType);
          }
          if (ParentRelationship.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ParentRelationship);
          }
          if (RelationName.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(RelationName);
          }
          if (Schema.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Schema);
          }
          if (Alias.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Alias);
          }
          if (ParallelAware != false) {
            output.WriteRawTag(48);
            output.WriteBool(ParallelAware);
          }
          if (AsyncCapable != false) {
            output.WriteRawTag(56);
            output.WriteBool(AsyncCapable);
          }
          if (StartupCost != 0F) {
            output.WriteRawTag(69);
            output.WriteFloat(StartupCost);
          }
          if (TotalCost != 0F) {
            output.WriteRawTag(77);
            output.WriteFloat(TotalCost);
          }
          if (PlanRows != 0UL) {
            output.WriteRawTag(80);
            output.WriteUInt64(PlanRows);
          }
          if (PlanWidth != 0UL) {
            output.WriteRawTag(88);
            output.WriteUInt64(PlanWidth);
          }
          output_.WriteTo(ref output, _repeated_output_codec);
          plans_.WriteTo(ref output, _repeated_plans_codec);
          if (SharedHitBlocks != 0UL) {
            output.WriteRawTag(112);
            output.WriteUInt64(SharedHitBlocks);
          }
          if (SharedReadBlocks != 0UL) {
            output.WriteRawTag(120);
            output.WriteUInt64(SharedReadBlocks);
          }
          if (SharedDirtiedBlocks != 0UL) {
            output.WriteRawTag(128, 1);
            output.WriteUInt64(SharedDirtiedBlocks);
          }
          if (SharedWrittenBlocks != 0UL) {
            output.WriteRawTag(136, 1);
            output.WriteUInt64(SharedWrittenBlocks);
          }
          if (LocalHitBlocks != 0UL) {
            output.WriteRawTag(144, 1);
            output.WriteUInt64(LocalHitBlocks);
          }
          if (LocalReadBlocks != 0UL) {
            output.WriteRawTag(152, 1);
            output.WriteUInt64(LocalReadBlocks);
          }
          if (LocalDirtiedBlocks != 0UL) {
            output.WriteRawTag(160, 1);
            output.WriteUInt64(LocalDirtiedBlocks);
          }
          if (LocalWrittenBlocks != 0UL) {
            output.WriteRawTag(168, 1);
            output.WriteUInt64(LocalWrittenBlocks);
          }
          if (TempReadBlocks != 0UL) {
            output.WriteRawTag(176, 1);
            output.WriteUInt64(TempReadBlocks);
          }
          if (TempWrittenBlocks != 0UL) {
            output.WriteRawTag(184, 1);
            output.WriteUInt64(TempWrittenBlocks);
          }
          sortKey_.WriteTo(ref output, _repeated_sortKey_codec);
          if (JoinType.Length != 0) {
            output.WriteRawTag(202, 1);
            output.WriteString(JoinType);
          }
          if (InnerUnique != false) {
            output.WriteRawTag(208, 1);
            output.WriteBool(InnerUnique);
          }
          if (HashCond.Length != 0) {
            output.WriteRawTag(218, 1);
            output.WriteString(HashCond);
          }
          if (IndexName.Length != 0) {
            output.WriteRawTag(226, 1);
            output.WriteString(IndexName);
          }
          if (ScanDirection.Length != 0) {
            output.WriteRawTag(234, 1);
            output.WriteString(ScanDirection);
          }
          if (IndexCond.Length != 0) {
            output.WriteRawTag(242, 1);
            output.WriteString(IndexCond);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (NodeType.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeType);
          }
          if (ParentRelationship.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ParentRelationship);
          }
          if (RelationName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RelationName);
          }
          if (Schema.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Schema);
          }
          if (Alias.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Alias);
          }
          if (ParallelAware != false) {
            size += 1 + 1;
          }
          if (AsyncCapable != false) {
            size += 1 + 1;
          }
          if (StartupCost != 0F) {
            size += 1 + 4;
          }
          if (TotalCost != 0F) {
            size += 1 + 4;
          }
          if (PlanRows != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlanRows);
          }
          if (PlanWidth != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlanWidth);
          }
          size += output_.CalculateSize(_repeated_output_codec);
          size += plans_.CalculateSize(_repeated_plans_codec);
          if (SharedHitBlocks != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SharedHitBlocks);
          }
          if (SharedReadBlocks != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SharedReadBlocks);
          }
          if (SharedDirtiedBlocks != 0UL) {
            size += 2 + pb::CodedOutputStream.ComputeUInt64Size(SharedDirtiedBlocks);
          }
          if (SharedWrittenBlocks != 0UL) {
            size += 2 + pb::CodedOutputStream.ComputeUInt64Size(SharedWrittenBlocks);
          }
          if (LocalHitBlocks != 0UL) {
            size += 2 + pb::CodedOutputStream.ComputeUInt64Size(LocalHitBlocks);
          }
          if (LocalReadBlocks != 0UL) {
            size += 2 + pb::CodedOutputStream.ComputeUInt64Size(LocalReadBlocks);
          }
          if (LocalDirtiedBlocks != 0UL) {
            size += 2 + pb::CodedOutputStream.ComputeUInt64Size(LocalDirtiedBlocks);
          }
          if (LocalWrittenBlocks != 0UL) {
            size += 2 + pb::CodedOutputStream.ComputeUInt64Size(LocalWrittenBlocks);
          }
          if (TempReadBlocks != 0UL) {
            size += 2 + pb::CodedOutputStream.ComputeUInt64Size(TempReadBlocks);
          }
          if (TempWrittenBlocks != 0UL) {
            size += 2 + pb::CodedOutputStream.ComputeUInt64Size(TempWrittenBlocks);
          }
          size += sortKey_.CalculateSize(_repeated_sortKey_codec);
          if (JoinType.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(JoinType);
          }
          if (InnerUnique != false) {
            size += 2 + 1;
          }
          if (HashCond.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(HashCond);
          }
          if (IndexName.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(IndexName);
          }
          if (ScanDirection.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ScanDirection);
          }
          if (IndexCond.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(IndexCond);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Plan other) {
          if (other == null) {
            return;
          }
          if (other.NodeType.Length != 0) {
            NodeType = other.NodeType;
          }
          if (other.ParentRelationship.Length != 0) {
            ParentRelationship = other.ParentRelationship;
          }
          if (other.RelationName.Length != 0) {
            RelationName = other.RelationName;
          }
          if (other.Schema.Length != 0) {
            Schema = other.Schema;
          }
          if (other.Alias.Length != 0) {
            Alias = other.Alias;
          }
          if (other.ParallelAware != false) {
            ParallelAware = other.ParallelAware;
          }
          if (other.AsyncCapable != false) {
            AsyncCapable = other.AsyncCapable;
          }
          if (other.StartupCost != 0F) {
            StartupCost = other.StartupCost;
          }
          if (other.TotalCost != 0F) {
            TotalCost = other.TotalCost;
          }
          if (other.PlanRows != 0UL) {
            PlanRows = other.PlanRows;
          }
          if (other.PlanWidth != 0UL) {
            PlanWidth = other.PlanWidth;
          }
          output_.Add(other.output_);
          plans_.Add(other.plans_);
          if (other.SharedHitBlocks != 0UL) {
            SharedHitBlocks = other.SharedHitBlocks;
          }
          if (other.SharedReadBlocks != 0UL) {
            SharedReadBlocks = other.SharedReadBlocks;
          }
          if (other.SharedDirtiedBlocks != 0UL) {
            SharedDirtiedBlocks = other.SharedDirtiedBlocks;
          }
          if (other.SharedWrittenBlocks != 0UL) {
            SharedWrittenBlocks = other.SharedWrittenBlocks;
          }
          if (other.LocalHitBlocks != 0UL) {
            LocalHitBlocks = other.LocalHitBlocks;
          }
          if (other.LocalReadBlocks != 0UL) {
            LocalReadBlocks = other.LocalReadBlocks;
          }
          if (other.LocalDirtiedBlocks != 0UL) {
            LocalDirtiedBlocks = other.LocalDirtiedBlocks;
          }
          if (other.LocalWrittenBlocks != 0UL) {
            LocalWrittenBlocks = other.LocalWrittenBlocks;
          }
          if (other.TempReadBlocks != 0UL) {
            TempReadBlocks = other.TempReadBlocks;
          }
          if (other.TempWrittenBlocks != 0UL) {
            TempWrittenBlocks = other.TempWrittenBlocks;
          }
          sortKey_.Add(other.sortKey_);
          if (other.JoinType.Length != 0) {
            JoinType = other.JoinType;
          }
          if (other.InnerUnique != false) {
            InnerUnique = other.InnerUnique;
          }
          if (other.HashCond.Length != 0) {
            HashCond = other.HashCond;
          }
          if (other.IndexName.Length != 0) {
            IndexName = other.IndexName;
          }
          if (other.ScanDirection.Length != 0) {
            ScanDirection = other.ScanDirection;
          }
          if (other.IndexCond.Length != 0) {
            IndexCond = other.IndexCond;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                NodeType = input.ReadString();
                break;
              }
              case 18: {
                ParentRelationship = input.ReadString();
                break;
              }
              case 26: {
                RelationName = input.ReadString();
                break;
              }
              case 34: {
                Schema = input.ReadString();
                break;
              }
              case 42: {
                Alias = input.ReadString();
                break;
              }
              case 48: {
                ParallelAware = input.ReadBool();
                break;
              }
              case 56: {
                AsyncCapable = input.ReadBool();
                break;
              }
              case 69: {
                StartupCost = input.ReadFloat();
                break;
              }
              case 77: {
                TotalCost = input.ReadFloat();
                break;
              }
              case 80: {
                PlanRows = input.ReadUInt64();
                break;
              }
              case 88: {
                PlanWidth = input.ReadUInt64();
                break;
              }
              case 98: {
                output_.AddEntriesFrom(input, _repeated_output_codec);
                break;
              }
              case 106: {
                plans_.AddEntriesFrom(input, _repeated_plans_codec);
                break;
              }
              case 112: {
                SharedHitBlocks = input.ReadUInt64();
                break;
              }
              case 120: {
                SharedReadBlocks = input.ReadUInt64();
                break;
              }
              case 128: {
                SharedDirtiedBlocks = input.ReadUInt64();
                break;
              }
              case 136: {
                SharedWrittenBlocks = input.ReadUInt64();
                break;
              }
              case 144: {
                LocalHitBlocks = input.ReadUInt64();
                break;
              }
              case 152: {
                LocalReadBlocks = input.ReadUInt64();
                break;
              }
              case 160: {
                LocalDirtiedBlocks = input.ReadUInt64();
                break;
              }
              case 168: {
                LocalWrittenBlocks = input.ReadUInt64();
                break;
              }
              case 176: {
                TempReadBlocks = input.ReadUInt64();
                break;
              }
              case 184: {
                TempWrittenBlocks = input.ReadUInt64();
                break;
              }
              case 194: {
                sortKey_.AddEntriesFrom(input, _repeated_sortKey_codec);
                break;
              }
              case 202: {
                JoinType = input.ReadString();
                break;
              }
              case 208: {
                InnerUnique = input.ReadBool();
                break;
              }
              case 218: {
                HashCond = input.ReadString();
                break;
              }
              case 226: {
                IndexName = input.ReadString();
                break;
              }
              case 234: {
                ScanDirection = input.ReadString();
                break;
              }
              case 242: {
                IndexCond = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                NodeType = input.ReadString();
                break;
              }
              case 18: {
                ParentRelationship = input.ReadString();
                break;
              }
              case 26: {
                RelationName = input.ReadString();
                break;
              }
              case 34: {
                Schema = input.ReadString();
                break;
              }
              case 42: {
                Alias = input.ReadString();
                break;
              }
              case 48: {
                ParallelAware = input.ReadBool();
                break;
              }
              case 56: {
                AsyncCapable = input.ReadBool();
                break;
              }
              case 69: {
                StartupCost = input.ReadFloat();
                break;
              }
              case 77: {
                TotalCost = input.ReadFloat();
                break;
              }
              case 80: {
                PlanRows = input.ReadUInt64();
                break;
              }
              case 88: {
                PlanWidth = input.ReadUInt64();
                break;
              }
              case 98: {
                output_.AddEntriesFrom(ref input, _repeated_output_codec);
                break;
              }
              case 106: {
                plans_.AddEntriesFrom(ref input, _repeated_plans_codec);
                break;
              }
              case 112: {
                SharedHitBlocks = input.ReadUInt64();
                break;
              }
              case 120: {
                SharedReadBlocks = input.ReadUInt64();
                break;
              }
              case 128: {
                SharedDirtiedBlocks = input.ReadUInt64();
                break;
              }
              case 136: {
                SharedWrittenBlocks = input.ReadUInt64();
                break;
              }
              case 144: {
                LocalHitBlocks = input.ReadUInt64();
                break;
              }
              case 152: {
                LocalReadBlocks = input.ReadUInt64();
                break;
              }
              case 160: {
                LocalDirtiedBlocks = input.ReadUInt64();
                break;
              }
              case 168: {
                LocalWrittenBlocks = input.ReadUInt64();
                break;
              }
              case 176: {
                TempReadBlocks = input.ReadUInt64();
                break;
              }
              case 184: {
                TempWrittenBlocks = input.ReadUInt64();
                break;
              }
              case 194: {
                sortKey_.AddEntriesFrom(ref input, _repeated_sortKey_codec);
                break;
              }
              case 202: {
                JoinType = input.ReadString();
                break;
              }
              case 208: {
                InnerUnique = input.ReadBool();
                break;
              }
              case 218: {
                HashCond = input.ReadString();
                break;
              }
              case 226: {
                IndexName = input.ReadString();
                break;
              }
              case 234: {
                ScanDirection = input.ReadString();
                break;
              }
              case 242: {
                IndexCond = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Planning : pb::IMessage<Planning>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Planning> _parser = new pb::MessageParser<Planning>(() => new Planning());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Planning> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Vet.PostgreSQLExplain.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Planning() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Planning(Planning other) : this() {
          sharedHitBlocks_ = other.sharedHitBlocks_;
          sharedReadBlocks_ = other.sharedReadBlocks_;
          sharedDirtiedBlocks_ = other.sharedDirtiedBlocks_;
          sharedWrittenBlocks_ = other.sharedWrittenBlocks_;
          localHitBlocks_ = other.localHitBlocks_;
          localReadBlocks_ = other.localReadBlocks_;
          localDirtiedBlocks_ = other.localDirtiedBlocks_;
          localWrittenBlocks_ = other.localWrittenBlocks_;
          tempReadBlocks_ = other.tempReadBlocks_;
          tempWrittenBlocks_ = other.tempWrittenBlocks_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Planning Clone() {
          return new Planning(this);
        }

        /// <summary>Field number for the "shared_hit_blocks" field.</summary>
        public const int SharedHitBlocksFieldNumber = 1;
        private ulong sharedHitBlocks_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong SharedHitBlocks {
          get { return sharedHitBlocks_; }
          set {
            sharedHitBlocks_ = value;
          }
        }

        /// <summary>Field number for the "shared_read_blocks" field.</summary>
        public const int SharedReadBlocksFieldNumber = 2;
        private ulong sharedReadBlocks_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong SharedReadBlocks {
          get { return sharedReadBlocks_; }
          set {
            sharedReadBlocks_ = value;
          }
        }

        /// <summary>Field number for the "shared_dirtied_blocks" field.</summary>
        public const int SharedDirtiedBlocksFieldNumber = 3;
        private ulong sharedDirtiedBlocks_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong SharedDirtiedBlocks {
          get { return sharedDirtiedBlocks_; }
          set {
            sharedDirtiedBlocks_ = value;
          }
        }

        /// <summary>Field number for the "shared_written_blocks" field.</summary>
        public const int SharedWrittenBlocksFieldNumber = 4;
        private ulong sharedWrittenBlocks_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong SharedWrittenBlocks {
          get { return sharedWrittenBlocks_; }
          set {
            sharedWrittenBlocks_ = value;
          }
        }

        /// <summary>Field number for the "local_hit_blocks" field.</summary>
        public const int LocalHitBlocksFieldNumber = 5;
        private ulong localHitBlocks_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong LocalHitBlocks {
          get { return localHitBlocks_; }
          set {
            localHitBlocks_ = value;
          }
        }

        /// <summary>Field number for the "local_read_blocks" field.</summary>
        public const int LocalReadBlocksFieldNumber = 6;
        private ulong localReadBlocks_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong LocalReadBlocks {
          get { return localReadBlocks_; }
          set {
            localReadBlocks_ = value;
          }
        }

        /// <summary>Field number for the "local_dirtied_blocks" field.</summary>
        public const int LocalDirtiedBlocksFieldNumber = 7;
        private ulong localDirtiedBlocks_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong LocalDirtiedBlocks {
          get { return localDirtiedBlocks_; }
          set {
            localDirtiedBlocks_ = value;
          }
        }

        /// <summary>Field number for the "local_written_blocks" field.</summary>
        public const int LocalWrittenBlocksFieldNumber = 8;
        private ulong localWrittenBlocks_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong LocalWrittenBlocks {
          get { return localWrittenBlocks_; }
          set {
            localWrittenBlocks_ = value;
          }
        }

        /// <summary>Field number for the "temp_read_blocks" field.</summary>
        public const int TempReadBlocksFieldNumber = 9;
        private ulong tempReadBlocks_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong TempReadBlocks {
          get { return tempReadBlocks_; }
          set {
            tempReadBlocks_ = value;
          }
        }

        /// <summary>Field number for the "temp_written_blocks" field.</summary>
        public const int TempWrittenBlocksFieldNumber = 10;
        private ulong tempWrittenBlocks_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong TempWrittenBlocks {
          get { return tempWrittenBlocks_; }
          set {
            tempWrittenBlocks_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Planning);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Planning other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SharedHitBlocks != other.SharedHitBlocks) return false;
          if (SharedReadBlocks != other.SharedReadBlocks) return false;
          if (SharedDirtiedBlocks != other.SharedDirtiedBlocks) return false;
          if (SharedWrittenBlocks != other.SharedWrittenBlocks) return false;
          if (LocalHitBlocks != other.LocalHitBlocks) return false;
          if (LocalReadBlocks != other.LocalReadBlocks) return false;
          if (LocalDirtiedBlocks != other.LocalDirtiedBlocks) return false;
          if (LocalWrittenBlocks != other.LocalWrittenBlocks) return false;
          if (TempReadBlocks != other.TempReadBlocks) return false;
          if (TempWrittenBlocks != other.TempWrittenBlocks) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (SharedHitBlocks != 0UL) hash ^= SharedHitBlocks.GetHashCode();
          if (SharedReadBlocks != 0UL) hash ^= SharedReadBlocks.GetHashCode();
          if (SharedDirtiedBlocks != 0UL) hash ^= SharedDirtiedBlocks.GetHashCode();
          if (SharedWrittenBlocks != 0UL) hash ^= SharedWrittenBlocks.GetHashCode();
          if (LocalHitBlocks != 0UL) hash ^= LocalHitBlocks.GetHashCode();
          if (LocalReadBlocks != 0UL) hash ^= LocalReadBlocks.GetHashCode();
          if (LocalDirtiedBlocks != 0UL) hash ^= LocalDirtiedBlocks.GetHashCode();
          if (LocalWrittenBlocks != 0UL) hash ^= LocalWrittenBlocks.GetHashCode();
          if (TempReadBlocks != 0UL) hash ^= TempReadBlocks.GetHashCode();
          if (TempWrittenBlocks != 0UL) hash ^= TempWrittenBlocks.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (SharedHitBlocks != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(SharedHitBlocks);
          }
          if (SharedReadBlocks != 0UL) {
            output.WriteRawTag(16);
            output.WriteUInt64(SharedReadBlocks);
          }
          if (SharedDirtiedBlocks != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(SharedDirtiedBlocks);
          }
          if (SharedWrittenBlocks != 0UL) {
            output.WriteRawTag(32);
            output.WriteUInt64(SharedWrittenBlocks);
          }
          if (LocalHitBlocks != 0UL) {
            output.WriteRawTag(40);
            output.WriteUInt64(LocalHitBlocks);
          }
          if (LocalReadBlocks != 0UL) {
            output.WriteRawTag(48);
            output.WriteUInt64(LocalReadBlocks);
          }
          if (LocalDirtiedBlocks != 0UL) {
            output.WriteRawTag(56);
            output.WriteUInt64(LocalDirtiedBlocks);
          }
          if (LocalWrittenBlocks != 0UL) {
            output.WriteRawTag(64);
            output.WriteUInt64(LocalWrittenBlocks);
          }
          if (TempReadBlocks != 0UL) {
            output.WriteRawTag(72);
            output.WriteUInt64(TempReadBlocks);
          }
          if (TempWrittenBlocks != 0UL) {
            output.WriteRawTag(80);
            output.WriteUInt64(TempWrittenBlocks);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (SharedHitBlocks != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(SharedHitBlocks);
          }
          if (SharedReadBlocks != 0UL) {
            output.WriteRawTag(16);
            output.WriteUInt64(SharedReadBlocks);
          }
          if (SharedDirtiedBlocks != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(SharedDirtiedBlocks);
          }
          if (SharedWrittenBlocks != 0UL) {
            output.WriteRawTag(32);
            output.WriteUInt64(SharedWrittenBlocks);
          }
          if (LocalHitBlocks != 0UL) {
            output.WriteRawTag(40);
            output.WriteUInt64(LocalHitBlocks);
          }
          if (LocalReadBlocks != 0UL) {
            output.WriteRawTag(48);
            output.WriteUInt64(LocalReadBlocks);
          }
          if (LocalDirtiedBlocks != 0UL) {
            output.WriteRawTag(56);
            output.WriteUInt64(LocalDirtiedBlocks);
          }
          if (LocalWrittenBlocks != 0UL) {
            output.WriteRawTag(64);
            output.WriteUInt64(LocalWrittenBlocks);
          }
          if (TempReadBlocks != 0UL) {
            output.WriteRawTag(72);
            output.WriteUInt64(TempReadBlocks);
          }
          if (TempWrittenBlocks != 0UL) {
            output.WriteRawTag(80);
            output.WriteUInt64(TempWrittenBlocks);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (SharedHitBlocks != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SharedHitBlocks);
          }
          if (SharedReadBlocks != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SharedReadBlocks);
          }
          if (SharedDirtiedBlocks != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SharedDirtiedBlocks);
          }
          if (SharedWrittenBlocks != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SharedWrittenBlocks);
          }
          if (LocalHitBlocks != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LocalHitBlocks);
          }
          if (LocalReadBlocks != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LocalReadBlocks);
          }
          if (LocalDirtiedBlocks != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LocalDirtiedBlocks);
          }
          if (LocalWrittenBlocks != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LocalWrittenBlocks);
          }
          if (TempReadBlocks != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TempReadBlocks);
          }
          if (TempWrittenBlocks != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TempWrittenBlocks);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Planning other) {
          if (other == null) {
            return;
          }
          if (other.SharedHitBlocks != 0UL) {
            SharedHitBlocks = other.SharedHitBlocks;
          }
          if (other.SharedReadBlocks != 0UL) {
            SharedReadBlocks = other.SharedReadBlocks;
          }
          if (other.SharedDirtiedBlocks != 0UL) {
            SharedDirtiedBlocks = other.SharedDirtiedBlocks;
          }
          if (other.SharedWrittenBlocks != 0UL) {
            SharedWrittenBlocks = other.SharedWrittenBlocks;
          }
          if (other.LocalHitBlocks != 0UL) {
            LocalHitBlocks = other.LocalHitBlocks;
          }
          if (other.LocalReadBlocks != 0UL) {
            LocalReadBlocks = other.LocalReadBlocks;
          }
          if (other.LocalDirtiedBlocks != 0UL) {
            LocalDirtiedBlocks = other.LocalDirtiedBlocks;
          }
          if (other.LocalWrittenBlocks != 0UL) {
            LocalWrittenBlocks = other.LocalWrittenBlocks;
          }
          if (other.TempReadBlocks != 0UL) {
            TempReadBlocks = other.TempReadBlocks;
          }
          if (other.TempWrittenBlocks != 0UL) {
            TempWrittenBlocks = other.TempWrittenBlocks;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                SharedHitBlocks = input.ReadUInt64();
                break;
              }
              case 16: {
                SharedReadBlocks = input.ReadUInt64();
                break;
              }
              case 24: {
                SharedDirtiedBlocks = input.ReadUInt64();
                break;
              }
              case 32: {
                SharedWrittenBlocks = input.ReadUInt64();
                break;
              }
              case 40: {
                LocalHitBlocks = input.ReadUInt64();
                break;
              }
              case 48: {
                LocalReadBlocks = input.ReadUInt64();
                break;
              }
              case 56: {
                LocalDirtiedBlocks = input.ReadUInt64();
                break;
              }
              case 64: {
                LocalWrittenBlocks = input.ReadUInt64();
                break;
              }
              case 72: {
                TempReadBlocks = input.ReadUInt64();
                break;
              }
              case 80: {
                TempWrittenBlocks = input.ReadUInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                SharedHitBlocks = input.ReadUInt64();
                break;
              }
              case 16: {
                SharedReadBlocks = input.ReadUInt64();
                break;
              }
              case 24: {
                SharedDirtiedBlocks = input.ReadUInt64();
                break;
              }
              case 32: {
                SharedWrittenBlocks = input.ReadUInt64();
                break;
              }
              case 40: {
                LocalHitBlocks = input.ReadUInt64();
                break;
              }
              case 48: {
                LocalReadBlocks = input.ReadUInt64();
                break;
              }
              case 56: {
                LocalDirtiedBlocks = input.ReadUInt64();
                break;
              }
              case 64: {
                LocalWrittenBlocks = input.ReadUInt64();
                break;
              }
              case 72: {
                TempReadBlocks = input.ReadUInt64();
                break;
              }
              case 80: {
                TempWrittenBlocks = input.ReadUInt64();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MySQL : pb::IMessage<MySQL>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MySQL> _parser = new pb::MessageParser<MySQL>(() => new MySQL());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MySQL> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vet.VetReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MySQL() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MySQL(MySQL other) : this() {
      explain_ = other.explain_ != null ? other.explain_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MySQL Clone() {
      return new MySQL(this);
    }

    /// <summary>Field number for the "explain" field.</summary>
    public const int ExplainFieldNumber = 1;
    private global::Vet.MySQLExplain explain_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Vet.MySQLExplain Explain {
      get { return explain_; }
      set {
        explain_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MySQL);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MySQL other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Explain, other.Explain)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (explain_ != null) hash ^= Explain.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (explain_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Explain);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (explain_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Explain);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (explain_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Explain);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MySQL other) {
      if (other == null) {
        return;
      }
      if (other.explain_ != null) {
        if (explain_ == null) {
          Explain = new global::Vet.MySQLExplain();
        }
        Explain.MergeFrom(other.Explain);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (explain_ == null) {
              Explain = new global::Vet.MySQLExplain();
            }
            input.ReadMessage(Explain);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (explain_ == null) {
              Explain = new global::Vet.MySQLExplain();
            }
            input.ReadMessage(Explain);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MySQLExplain : pb::IMessage<MySQLExplain>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MySQLExplain> _parser = new pb::MessageParser<MySQLExplain>(() => new MySQLExplain());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MySQLExplain> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vet.VetReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MySQLExplain() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MySQLExplain(MySQLExplain other) : this() {
      queryBlock_ = other.queryBlock_ != null ? other.queryBlock_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MySQLExplain Clone() {
      return new MySQLExplain(this);
    }

    /// <summary>Field number for the "query_block" field.</summary>
    public const int QueryBlockFieldNumber = 1;
    private global::Vet.MySQLExplain.Types.QueryBlock queryBlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Vet.MySQLExplain.Types.QueryBlock QueryBlock {
      get { return queryBlock_; }
      set {
        queryBlock_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MySQLExplain);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MySQLExplain other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(QueryBlock, other.QueryBlock)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (queryBlock_ != null) hash ^= QueryBlock.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (queryBlock_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(QueryBlock);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (queryBlock_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(QueryBlock);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (queryBlock_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QueryBlock);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MySQLExplain other) {
      if (other == null) {
        return;
      }
      if (other.queryBlock_ != null) {
        if (queryBlock_ == null) {
          QueryBlock = new global::Vet.MySQLExplain.Types.QueryBlock();
        }
        QueryBlock.MergeFrom(other.QueryBlock);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (queryBlock_ == null) {
              QueryBlock = new global::Vet.MySQLExplain.Types.QueryBlock();
            }
            input.ReadMessage(QueryBlock);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (queryBlock_ == null) {
              QueryBlock = new global::Vet.MySQLExplain.Types.QueryBlock();
            }
            input.ReadMessage(QueryBlock);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the MySQLExplain message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class QueryBlock : pb::IMessage<QueryBlock>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<QueryBlock> _parser = new pb::MessageParser<QueryBlock>(() => new QueryBlock());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<QueryBlock> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Vet.MySQLExplain.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QueryBlock() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QueryBlock(QueryBlock other) : this() {
          selectId_ = other.selectId_;
          message_ = other.message_;
          costInfo_ = other.costInfo_.Clone();
          table_ = other.table_ != null ? other.table_.Clone() : null;
          orderingOperation_ = other.orderingOperation_ != null ? other.orderingOperation_.Clone() : null;
          nestedLoop_ = other.nestedLoop_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QueryBlock Clone() {
          return new QueryBlock(this);
        }

        /// <summary>Field number for the "select_id" field.</summary>
        public const int SelectIdFieldNumber = 1;
        private ulong selectId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong SelectId {
          get { return selectId_; }
          set {
            selectId_ = value;
          }
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 2;
        private string message_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Message {
          get { return message_; }
          set {
            message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "cost_info" field.</summary>
        public const int CostInfoFieldNumber = 3;
        private static readonly pbc::MapField<string, string>.Codec _map_costInfo_codec
            = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 26);
        private readonly pbc::MapField<string, string> costInfo_ = new pbc::MapField<string, string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::MapField<string, string> CostInfo {
          get { return costInfo_; }
        }

        /// <summary>Field number for the "table" field.</summary>
        public const int TableFieldNumber = 4;
        private global::Vet.MySQLExplain.Types.Table table_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Vet.MySQLExplain.Types.Table Table {
          get { return table_; }
          set {
            table_ = value;
          }
        }

        /// <summary>Field number for the "ordering_operation" field.</summary>
        public const int OrderingOperationFieldNumber = 5;
        private global::Vet.MySQLExplain.Types.OrderingOperation orderingOperation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Vet.MySQLExplain.Types.OrderingOperation OrderingOperation {
          get { return orderingOperation_; }
          set {
            orderingOperation_ = value;
          }
        }

        /// <summary>Field number for the "nested_loop" field.</summary>
        public const int NestedLoopFieldNumber = 6;
        private static readonly pb::FieldCodec<global::Vet.MySQLExplain.Types.NestedLoopObj> _repeated_nestedLoop_codec
            = pb::FieldCodec.ForMessage(50, global::Vet.MySQLExplain.Types.NestedLoopObj.Parser);
        private readonly pbc::RepeatedField<global::Vet.MySQLExplain.Types.NestedLoopObj> nestedLoop_ = new pbc::RepeatedField<global::Vet.MySQLExplain.Types.NestedLoopObj>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Vet.MySQLExplain.Types.NestedLoopObj> NestedLoop {
          get { return nestedLoop_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as QueryBlock);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(QueryBlock other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SelectId != other.SelectId) return false;
          if (Message != other.Message) return false;
          if (!CostInfo.Equals(other.CostInfo)) return false;
          if (!object.Equals(Table, other.Table)) return false;
          if (!object.Equals(OrderingOperation, other.OrderingOperation)) return false;
          if(!nestedLoop_.Equals(other.nestedLoop_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (SelectId != 0UL) hash ^= SelectId.GetHashCode();
          if (Message.Length != 0) hash ^= Message.GetHashCode();
          hash ^= CostInfo.GetHashCode();
          if (table_ != null) hash ^= Table.GetHashCode();
          if (orderingOperation_ != null) hash ^= OrderingOperation.GetHashCode();
          hash ^= nestedLoop_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (SelectId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(SelectId);
          }
          if (Message.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Message);
          }
          costInfo_.WriteTo(output, _map_costInfo_codec);
          if (table_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(Table);
          }
          if (orderingOperation_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(OrderingOperation);
          }
          nestedLoop_.WriteTo(output, _repeated_nestedLoop_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (SelectId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(SelectId);
          }
          if (Message.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Message);
          }
          costInfo_.WriteTo(ref output, _map_costInfo_codec);
          if (table_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(Table);
          }
          if (orderingOperation_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(OrderingOperation);
          }
          nestedLoop_.WriteTo(ref output, _repeated_nestedLoop_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (SelectId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SelectId);
          }
          if (Message.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
          }
          size += costInfo_.CalculateSize(_map_costInfo_codec);
          if (table_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Table);
          }
          if (orderingOperation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(OrderingOperation);
          }
          size += nestedLoop_.CalculateSize(_repeated_nestedLoop_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(QueryBlock other) {
          if (other == null) {
            return;
          }
          if (other.SelectId != 0UL) {
            SelectId = other.SelectId;
          }
          if (other.Message.Length != 0) {
            Message = other.Message;
          }
          costInfo_.MergeFrom(other.costInfo_);
          if (other.table_ != null) {
            if (table_ == null) {
              Table = new global::Vet.MySQLExplain.Types.Table();
            }
            Table.MergeFrom(other.Table);
          }
          if (other.orderingOperation_ != null) {
            if (orderingOperation_ == null) {
              OrderingOperation = new global::Vet.MySQLExplain.Types.OrderingOperation();
            }
            OrderingOperation.MergeFrom(other.OrderingOperation);
          }
          nestedLoop_.Add(other.nestedLoop_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                SelectId = input.ReadUInt64();
                break;
              }
              case 18: {
                Message = input.ReadString();
                break;
              }
              case 26: {
                costInfo_.AddEntriesFrom(input, _map_costInfo_codec);
                break;
              }
              case 34: {
                if (table_ == null) {
                  Table = new global::Vet.MySQLExplain.Types.Table();
                }
                input.ReadMessage(Table);
                break;
              }
              case 42: {
                if (orderingOperation_ == null) {
                  OrderingOperation = new global::Vet.MySQLExplain.Types.OrderingOperation();
                }
                input.ReadMessage(OrderingOperation);
                break;
              }
              case 50: {
                nestedLoop_.AddEntriesFrom(input, _repeated_nestedLoop_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                SelectId = input.ReadUInt64();
                break;
              }
              case 18: {
                Message = input.ReadString();
                break;
              }
              case 26: {
                costInfo_.AddEntriesFrom(ref input, _map_costInfo_codec);
                break;
              }
              case 34: {
                if (table_ == null) {
                  Table = new global::Vet.MySQLExplain.Types.Table();
                }
                input.ReadMessage(Table);
                break;
              }
              case 42: {
                if (orderingOperation_ == null) {
                  OrderingOperation = new global::Vet.MySQLExplain.Types.OrderingOperation();
                }
                input.ReadMessage(OrderingOperation);
                break;
              }
              case 50: {
                nestedLoop_.AddEntriesFrom(ref input, _repeated_nestedLoop_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Table : pb::IMessage<Table>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Table> _parser = new pb::MessageParser<Table>(() => new Table());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Table> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Vet.MySQLExplain.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Table() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Table(Table other) : this() {
          tableName_ = other.tableName_;
          accessType_ = other.accessType_;
          rowsExaminedPerScan_ = other.rowsExaminedPerScan_;
          rowsProducedPerJoin_ = other.rowsProducedPerJoin_;
          filtered_ = other.filtered_;
          costInfo_ = other.costInfo_.Clone();
          usedColumns_ = other.usedColumns_.Clone();
          insert_ = other.insert_;
          possibleKeys_ = other.possibleKeys_.Clone();
          key_ = other.key_;
          usedKeyParts_ = other.usedKeyParts_.Clone();
          keyLength_ = other.keyLength_;
          ref_ = other.ref_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Table Clone() {
          return new Table(this);
        }

        /// <summary>Field number for the "table_name" field.</summary>
        public const int TableNameFieldNumber = 1;
        private string tableName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string TableName {
          get { return tableName_; }
          set {
            tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "access_type" field.</summary>
        public const int AccessTypeFieldNumber = 2;
        private string accessType_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AccessType {
          get { return accessType_; }
          set {
            accessType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "rows_examined_per_scan" field.</summary>
        public const int RowsExaminedPerScanFieldNumber = 3;
        private ulong rowsExaminedPerScan_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong RowsExaminedPerScan {
          get { return rowsExaminedPerScan_; }
          set {
            rowsExaminedPerScan_ = value;
          }
        }

        /// <summary>Field number for the "rows_produced_per_join" field.</summary>
        public const int RowsProducedPerJoinFieldNumber = 4;
        private ulong rowsProducedPerJoin_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong RowsProducedPerJoin {
          get { return rowsProducedPerJoin_; }
          set {
            rowsProducedPerJoin_ = value;
          }
        }

        /// <summary>Field number for the "filtered" field.</summary>
        public const int FilteredFieldNumber = 5;
        private string filtered_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Filtered {
          get { return filtered_; }
          set {
            filtered_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "cost_info" field.</summary>
        public const int CostInfoFieldNumber = 6;
        private static readonly pbc::MapField<string, string>.Codec _map_costInfo_codec
            = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 50);
        private readonly pbc::MapField<string, string> costInfo_ = new pbc::MapField<string, string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::MapField<string, string> CostInfo {
          get { return costInfo_; }
        }

        /// <summary>Field number for the "used_columns" field.</summary>
        public const int UsedColumnsFieldNumber = 7;
        private static readonly pb::FieldCodec<string> _repeated_usedColumns_codec
            = pb::FieldCodec.ForString(58);
        private readonly pbc::RepeatedField<string> usedColumns_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> UsedColumns {
          get { return usedColumns_; }
        }

        /// <summary>Field number for the "insert" field.</summary>
        public const int InsertFieldNumber = 8;
        private bool insert_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Insert {
          get { return insert_; }
          set {
            insert_ = value;
          }
        }

        /// <summary>Field number for the "possible_keys" field.</summary>
        public const int PossibleKeysFieldNumber = 9;
        private static readonly pb::FieldCodec<string> _repeated_possibleKeys_codec
            = pb::FieldCodec.ForString(74);
        private readonly pbc::RepeatedField<string> possibleKeys_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> PossibleKeys {
          get { return possibleKeys_; }
        }

        /// <summary>Field number for the "key" field.</summary>
        public const int KeyFieldNumber = 10;
        private string key_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Key {
          get { return key_; }
          set {
            key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "used_key_parts" field.</summary>
        public const int UsedKeyPartsFieldNumber = 11;
        private static readonly pb::FieldCodec<string> _repeated_usedKeyParts_codec
            = pb::FieldCodec.ForString(90);
        private readonly pbc::RepeatedField<string> usedKeyParts_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> UsedKeyParts {
          get { return usedKeyParts_; }
        }

        /// <summary>Field number for the "key_length" field.</summary>
        public const int KeyLengthFieldNumber = 12;
        private string keyLength_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string KeyLength {
          get { return keyLength_; }
          set {
            keyLength_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ref" field.</summary>
        public const int RefFieldNumber = 13;
        private static readonly pb::FieldCodec<string> _repeated_ref_codec
            = pb::FieldCodec.ForString(106);
        private readonly pbc::RepeatedField<string> ref_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> Ref {
          get { return ref_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Table);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Table other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TableName != other.TableName) return false;
          if (AccessType != other.AccessType) return false;
          if (RowsExaminedPerScan != other.RowsExaminedPerScan) return false;
          if (RowsProducedPerJoin != other.RowsProducedPerJoin) return false;
          if (Filtered != other.Filtered) return false;
          if (!CostInfo.Equals(other.CostInfo)) return false;
          if(!usedColumns_.Equals(other.usedColumns_)) return false;
          if (Insert != other.Insert) return false;
          if(!possibleKeys_.Equals(other.possibleKeys_)) return false;
          if (Key != other.Key) return false;
          if(!usedKeyParts_.Equals(other.usedKeyParts_)) return false;
          if (KeyLength != other.KeyLength) return false;
          if(!ref_.Equals(other.ref_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (TableName.Length != 0) hash ^= TableName.GetHashCode();
          if (AccessType.Length != 0) hash ^= AccessType.GetHashCode();
          if (RowsExaminedPerScan != 0UL) hash ^= RowsExaminedPerScan.GetHashCode();
          if (RowsProducedPerJoin != 0UL) hash ^= RowsProducedPerJoin.GetHashCode();
          if (Filtered.Length != 0) hash ^= Filtered.GetHashCode();
          hash ^= CostInfo.GetHashCode();
          hash ^= usedColumns_.GetHashCode();
          if (Insert != false) hash ^= Insert.GetHashCode();
          hash ^= possibleKeys_.GetHashCode();
          if (Key.Length != 0) hash ^= Key.GetHashCode();
          hash ^= usedKeyParts_.GetHashCode();
          if (KeyLength.Length != 0) hash ^= KeyLength.GetHashCode();
          hash ^= ref_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (TableName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TableName);
          }
          if (AccessType.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(AccessType);
          }
          if (RowsExaminedPerScan != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(RowsExaminedPerScan);
          }
          if (RowsProducedPerJoin != 0UL) {
            output.WriteRawTag(32);
            output.WriteUInt64(RowsProducedPerJoin);
          }
          if (Filtered.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Filtered);
          }
          costInfo_.WriteTo(output, _map_costInfo_codec);
          usedColumns_.WriteTo(output, _repeated_usedColumns_codec);
          if (Insert != false) {
            output.WriteRawTag(64);
            output.WriteBool(Insert);
          }
          possibleKeys_.WriteTo(output, _repeated_possibleKeys_codec);
          if (Key.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(Key);
          }
          usedKeyParts_.WriteTo(output, _repeated_usedKeyParts_codec);
          if (KeyLength.Length != 0) {
            output.WriteRawTag(98);
            output.WriteString(KeyLength);
          }
          ref_.WriteTo(output, _repeated_ref_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (TableName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TableName);
          }
          if (AccessType.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(AccessType);
          }
          if (RowsExaminedPerScan != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(RowsExaminedPerScan);
          }
          if (RowsProducedPerJoin != 0UL) {
            output.WriteRawTag(32);
            output.WriteUInt64(RowsProducedPerJoin);
          }
          if (Filtered.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Filtered);
          }
          costInfo_.WriteTo(ref output, _map_costInfo_codec);
          usedColumns_.WriteTo(ref output, _repeated_usedColumns_codec);
          if (Insert != false) {
            output.WriteRawTag(64);
            output.WriteBool(Insert);
          }
          possibleKeys_.WriteTo(ref output, _repeated_possibleKeys_codec);
          if (Key.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(Key);
          }
          usedKeyParts_.WriteTo(ref output, _repeated_usedKeyParts_codec);
          if (KeyLength.Length != 0) {
            output.WriteRawTag(98);
            output.WriteString(KeyLength);
          }
          ref_.WriteTo(ref output, _repeated_ref_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (TableName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
          }
          if (AccessType.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessType);
          }
          if (RowsExaminedPerScan != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RowsExaminedPerScan);
          }
          if (RowsProducedPerJoin != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RowsProducedPerJoin);
          }
          if (Filtered.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Filtered);
          }
          size += costInfo_.CalculateSize(_map_costInfo_codec);
          size += usedColumns_.CalculateSize(_repeated_usedColumns_codec);
          if (Insert != false) {
            size += 1 + 1;
          }
          size += possibleKeys_.CalculateSize(_repeated_possibleKeys_codec);
          if (Key.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
          }
          size += usedKeyParts_.CalculateSize(_repeated_usedKeyParts_codec);
          if (KeyLength.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(KeyLength);
          }
          size += ref_.CalculateSize(_repeated_ref_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Table other) {
          if (other == null) {
            return;
          }
          if (other.TableName.Length != 0) {
            TableName = other.TableName;
          }
          if (other.AccessType.Length != 0) {
            AccessType = other.AccessType;
          }
          if (other.RowsExaminedPerScan != 0UL) {
            RowsExaminedPerScan = other.RowsExaminedPerScan;
          }
          if (other.RowsProducedPerJoin != 0UL) {
            RowsProducedPerJoin = other.RowsProducedPerJoin;
          }
          if (other.Filtered.Length != 0) {
            Filtered = other.Filtered;
          }
          costInfo_.MergeFrom(other.costInfo_);
          usedColumns_.Add(other.usedColumns_);
          if (other.Insert != false) {
            Insert = other.Insert;
          }
          possibleKeys_.Add(other.possibleKeys_);
          if (other.Key.Length != 0) {
            Key = other.Key;
          }
          usedKeyParts_.Add(other.usedKeyParts_);
          if (other.KeyLength.Length != 0) {
            KeyLength = other.KeyLength;
          }
          ref_.Add(other.ref_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TableName = input.ReadString();
                break;
              }
              case 18: {
                AccessType = input.ReadString();
                break;
              }
              case 24: {
                RowsExaminedPerScan = input.ReadUInt64();
                break;
              }
              case 32: {
                RowsProducedPerJoin = input.ReadUInt64();
                break;
              }
              case 42: {
                Filtered = input.ReadString();
                break;
              }
              case 50: {
                costInfo_.AddEntriesFrom(input, _map_costInfo_codec);
                break;
              }
              case 58: {
                usedColumns_.AddEntriesFrom(input, _repeated_usedColumns_codec);
                break;
              }
              case 64: {
                Insert = input.ReadBool();
                break;
              }
              case 74: {
                possibleKeys_.AddEntriesFrom(input, _repeated_possibleKeys_codec);
                break;
              }
              case 82: {
                Key = input.ReadString();
                break;
              }
              case 90: {
                usedKeyParts_.AddEntriesFrom(input, _repeated_usedKeyParts_codec);
                break;
              }
              case 98: {
                KeyLength = input.ReadString();
                break;
              }
              case 106: {
                ref_.AddEntriesFrom(input, _repeated_ref_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                TableName = input.ReadString();
                break;
              }
              case 18: {
                AccessType = input.ReadString();
                break;
              }
              case 24: {
                RowsExaminedPerScan = input.ReadUInt64();
                break;
              }
              case 32: {
                RowsProducedPerJoin = input.ReadUInt64();
                break;
              }
              case 42: {
                Filtered = input.ReadString();
                break;
              }
              case 50: {
                costInfo_.AddEntriesFrom(ref input, _map_costInfo_codec);
                break;
              }
              case 58: {
                usedColumns_.AddEntriesFrom(ref input, _repeated_usedColumns_codec);
                break;
              }
              case 64: {
                Insert = input.ReadBool();
                break;
              }
              case 74: {
                possibleKeys_.AddEntriesFrom(ref input, _repeated_possibleKeys_codec);
                break;
              }
              case 82: {
                Key = input.ReadString();
                break;
              }
              case 90: {
                usedKeyParts_.AddEntriesFrom(ref input, _repeated_usedKeyParts_codec);
                break;
              }
              case 98: {
                KeyLength = input.ReadString();
                break;
              }
              case 106: {
                ref_.AddEntriesFrom(ref input, _repeated_ref_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class NestedLoopObj : pb::IMessage<NestedLoopObj>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<NestedLoopObj> _parser = new pb::MessageParser<NestedLoopObj>(() => new NestedLoopObj());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<NestedLoopObj> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Vet.MySQLExplain.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NestedLoopObj() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NestedLoopObj(NestedLoopObj other) : this() {
          table_ = other.table_ != null ? other.table_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NestedLoopObj Clone() {
          return new NestedLoopObj(this);
        }

        /// <summary>Field number for the "table" field.</summary>
        public const int TableFieldNumber = 1;
        private global::Vet.MySQLExplain.Types.Table table_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Vet.MySQLExplain.Types.Table Table {
          get { return table_; }
          set {
            table_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as NestedLoopObj);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(NestedLoopObj other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Table, other.Table)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (table_ != null) hash ^= Table.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (table_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Table);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (table_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Table);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (table_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Table);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(NestedLoopObj other) {
          if (other == null) {
            return;
          }
          if (other.table_ != null) {
            if (table_ == null) {
              Table = new global::Vet.MySQLExplain.Types.Table();
            }
            Table.MergeFrom(other.Table);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (table_ == null) {
                  Table = new global::Vet.MySQLExplain.Types.Table();
                }
                input.ReadMessage(Table);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (table_ == null) {
                  Table = new global::Vet.MySQLExplain.Types.Table();
                }
                input.ReadMessage(Table);
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class OrderingOperation : pb::IMessage<OrderingOperation>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<OrderingOperation> _parser = new pb::MessageParser<OrderingOperation>(() => new OrderingOperation());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<OrderingOperation> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Vet.MySQLExplain.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OrderingOperation() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OrderingOperation(OrderingOperation other) : this() {
          usingFilesort_ = other.usingFilesort_;
          costInfo_ = other.costInfo_.Clone();
          table_ = other.table_ != null ? other.table_.Clone() : null;
          nestedLoop_ = other.nestedLoop_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OrderingOperation Clone() {
          return new OrderingOperation(this);
        }

        /// <summary>Field number for the "using_filesort" field.</summary>
        public const int UsingFilesortFieldNumber = 1;
        private bool usingFilesort_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool UsingFilesort {
          get { return usingFilesort_; }
          set {
            usingFilesort_ = value;
          }
        }

        /// <summary>Field number for the "cost_info" field.</summary>
        public const int CostInfoFieldNumber = 2;
        private static readonly pbc::MapField<string, string>.Codec _map_costInfo_codec
            = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 18);
        private readonly pbc::MapField<string, string> costInfo_ = new pbc::MapField<string, string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::MapField<string, string> CostInfo {
          get { return costInfo_; }
        }

        /// <summary>Field number for the "table" field.</summary>
        public const int TableFieldNumber = 3;
        private global::Vet.MySQLExplain.Types.Table table_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Vet.MySQLExplain.Types.Table Table {
          get { return table_; }
          set {
            table_ = value;
          }
        }

        /// <summary>Field number for the "nested_loop" field.</summary>
        public const int NestedLoopFieldNumber = 4;
        private static readonly pb::FieldCodec<global::Vet.MySQLExplain.Types.NestedLoopObj> _repeated_nestedLoop_codec
            = pb::FieldCodec.ForMessage(34, global::Vet.MySQLExplain.Types.NestedLoopObj.Parser);
        private readonly pbc::RepeatedField<global::Vet.MySQLExplain.Types.NestedLoopObj> nestedLoop_ = new pbc::RepeatedField<global::Vet.MySQLExplain.Types.NestedLoopObj>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Vet.MySQLExplain.Types.NestedLoopObj> NestedLoop {
          get { return nestedLoop_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as OrderingOperation);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(OrderingOperation other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UsingFilesort != other.UsingFilesort) return false;
          if (!CostInfo.Equals(other.CostInfo)) return false;
          if (!object.Equals(Table, other.Table)) return false;
          if(!nestedLoop_.Equals(other.nestedLoop_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (UsingFilesort != false) hash ^= UsingFilesort.GetHashCode();
          hash ^= CostInfo.GetHashCode();
          if (table_ != null) hash ^= Table.GetHashCode();
          hash ^= nestedLoop_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (UsingFilesort != false) {
            output.WriteRawTag(8);
            output.WriteBool(UsingFilesort);
          }
          costInfo_.WriteTo(output, _map_costInfo_codec);
          if (table_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Table);
          }
          nestedLoop_.WriteTo(output, _repeated_nestedLoop_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (UsingFilesort != false) {
            output.WriteRawTag(8);
            output.WriteBool(UsingFilesort);
          }
          costInfo_.WriteTo(ref output, _map_costInfo_codec);
          if (table_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Table);
          }
          nestedLoop_.WriteTo(ref output, _repeated_nestedLoop_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (UsingFilesort != false) {
            size += 1 + 1;
          }
          size += costInfo_.CalculateSize(_map_costInfo_codec);
          if (table_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Table);
          }
          size += nestedLoop_.CalculateSize(_repeated_nestedLoop_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(OrderingOperation other) {
          if (other == null) {
            return;
          }
          if (other.UsingFilesort != false) {
            UsingFilesort = other.UsingFilesort;
          }
          costInfo_.MergeFrom(other.costInfo_);
          if (other.table_ != null) {
            if (table_ == null) {
              Table = new global::Vet.MySQLExplain.Types.Table();
            }
            Table.MergeFrom(other.Table);
          }
          nestedLoop_.Add(other.nestedLoop_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                UsingFilesort = input.ReadBool();
                break;
              }
              case 18: {
                costInfo_.AddEntriesFrom(input, _map_costInfo_codec);
                break;
              }
              case 26: {
                if (table_ == null) {
                  Table = new global::Vet.MySQLExplain.Types.Table();
                }
                input.ReadMessage(Table);
                break;
              }
              case 34: {
                nestedLoop_.AddEntriesFrom(input, _repeated_nestedLoop_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                UsingFilesort = input.ReadBool();
                break;
              }
              case 18: {
                costInfo_.AddEntriesFrom(ref input, _map_costInfo_codec);
                break;
              }
              case 26: {
                if (table_ == null) {
                  Table = new global::Vet.MySQLExplain.Types.Table();
                }
                input.ReadMessage(Table);
                break;
              }
              case 34: {
                nestedLoop_.AddEntriesFrom(ref input, _repeated_nestedLoop_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
