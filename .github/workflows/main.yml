name: Main
defaults:
  run:
    shell: bash

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "*" ]
    paths:
      - "**"
      - "!**.md"

jobs:
  
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "8.0.x"

      - name: .NET Lint
        uses: zyactions/dotnet-lint@v1
        with:
          implicit-restore: true
          workspace: sqlc-gen-csharp.sln
          exclude: |
            GeneratedProtobuf
            MySqlConnectorExample
            NpgsqlExample
  
  ci:
    name: CI
    runs-on: ${{ matrix.os }}
    if: ${{ always() }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        architecture: [ "x64", "arm64" ]
        dotnet-version: [ '8.0.x' ]

    steps:
      - uses: actions/checkout@v4
      - name: Load .env file
        uses: xom9ikk/dotenv@v2.3.0
        with:
          load-mode: strict
          
      - name: Setup Dotnet ${{ matrix.dotnet-version }}  
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          
      - name: install Wasi workload
        run: dotnet workload install wasi-experimental
        
      - name: Download Wasi SDK on Ubuntu
        if: runner.os == 'Linux'
        run: |
          wget https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-22/wasi-sdk-22.0-linux.tar.gz
          tar xf wasi-sdk-22.0-linux.tar.gz
          chmod -R 755 wasi-sdk-22.0
  
      #  name: Download WASI SDK on Windows
      #   run: |
      #     curl -LO https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-22/wasi-sdk-22.0.m-mingw.tar.gz
      #     tar xf wasi-sdk-22.0.m-mingw.tar.gz -C wasi-sdk-22.0
      #     chmod -R 755 wasi-sdk-22.0
      
      - name: Dotnet Wasm Publish
        run: |
          WASI_SDK_PATH="$(pwd)/wasi-sdk-22.0" dotnet publish WasmRunner -c release
          ./scripts/wasm/copy_to_dist.sh 
          ./scripts/wasm/update_sha.sh
          
      - uses: sqlc-dev/setup-sqlc@v4
        with:
          sqlc-version: '1.25.0'
          
      - name: Verify pushed generated code is synced
        run: sqlc -f sqlc.wasm.yaml diff
        
      - name: Verify pushed Dockerfile is synced
        run: |
          ./scripts/generate_dockerfile.sh /tmp/Dockerfile
          diff /tmp/Dockerfile Dockerfile
        
      - name: Sqlc generate using Wasm plugin
        run: sqlc -f sqlc.wasm.yaml generate
        
      - uses: hoverkraft-tech/compose-action@v1.5.1
        with:
         services: |
           mysqldb
           postgresdb
           plugin-tests
           
      - name: Test generated code
        run: |
           chmod +x ./scripts/run_tests.sh
           ./scripts/run_tests.sh
        shell: bash
