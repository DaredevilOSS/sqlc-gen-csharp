name: CI
defaults:
  run:
    shell: bash

on:
  push:
    branches: [ "main", "improve-ci" ]
  pull_request:
    paths:
      - "!**.md"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    if: ${{ always() }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        architecture: [ "x64", "arm64" ]
        dotnet-version: [ '8.0.x' ]

    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: install wasm workload
        run: dotnet workload install wasi-experimental
      - name: download wasi-sdk
        run: |
          wget https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-22/wasi-sdk-22.0-linux.tar.gz
          tar xf wasi-sdk-22.0-linux.tar.gz
          chmod -R 755 wasi-sdk-22.0
      - name: dotnet publish and build
        run: WASI_SDK_PATH="$(pwd)/wasi-sdk-22.0" dotnet publish SqlcGenCsharpWasm -c release
      - uses: sqlc-dev/setup-sqlc@v4
        with:
          sqlc-version: '1.25.0'
      - name: run update sha256 for builded wasm
        shell: bash
        run: |
          chmod +x ./scripts/update_wasm_plugin.sh
          ./scripts/update_wasm_plugin.sh
      - name: run sqlc with generated wasm plugin
        run: sqlc -f sqlc.wasm.yaml generate
      - uses: hoverkraft-tech/compose-action@v1.5.1
        with:
         services: |
           mysqldb
           postgresdb
           plugin-tests
      - name: Load .env file
        uses: xom9ikk/dotenv@v2
      - name: test dotnet output project
        run: |
           chmod +x ./scripts/run_tests.sh
           echo "job TESTS_CONTAINER_NAME is ${TESTS_CONTAINER_NAME}"
           ./scripts/run_tests.sh
        shell: bash
