// auto-generated by sqlc - do not edit
using System.Text.Json;
using System;
using System.Collections.Generic;

namespace MySqlConnectorDapperExampleGen;
public class Author
{
    public required long Id { get; init; }
    public required string Name { get; init; }
    public string? Bio { get; init; }
};
public class Book
{
    public required long Id { get; init; }
    public required string Name { get; init; }
    public required long AuthorId { get; init; }
    public string? Description { get; init; }
};
public class MysqlType
{
    public bool? CBool { get; init; }
    public bool? CBoolean { get; init; }
    public short? CTinyint { get; init; }
    public short? CSmallint { get; init; }
    public int? CMediumint { get; init; }
    public int? CInt { get; init; }
    public int? CInteger { get; init; }
    public long? CBigint { get; init; }
    public double? CFloat { get; init; }
    public decimal? CDecimal { get; init; }
    public decimal? CDec { get; init; }
    public decimal? CNumeric { get; init; }
    public decimal? CFixed { get; init; }
    public double? CDouble { get; init; }
    public double? CDoublePrecision { get; init; }
    public short? CYear { get; init; }
    public DateTime? CDate { get; init; }
    public string? CTime { get; init; }
    public DateTime? CDatetime { get; init; }
    public DateTime? CTimestamp { get; init; }
    public string? CChar { get; init; }
    public string? CNchar { get; init; }
    public string? CNationalChar { get; init; }
    public string? CVarchar { get; init; }
    public string? CTinytext { get; init; }
    public string? CMediumtext { get; init; }
    public string? CText { get; init; }
    public string? CLongtext { get; init; }
    public MysqlTypesCEnum? CEnum { get; init; }
    public JsonElement? CJson { get; init; }
    public JsonElement? CJsonStringOverride { get; init; }
    public byte? CBit { get; init; }
    public byte[]? CBinary { get; init; }
    public byte[]? CVarbinary { get; init; }
    public byte[]? CTinyblob { get; init; }
    public byte[]? CBlob { get; init; }
    public byte[]? CMediumblob { get; init; }
    public byte[]? CLongblob { get; init; }
};
public class ExtendedBio
{
    public string? AuthorName { get; init; }
    public string? Name { get; init; }
    public ExtendedBiosBioType? BioType { get; init; }
};
public enum MysqlTypesCEnum
{
    Invalid = 0, // reserved for invalid enum value
    Small = 1,
    Medium = 2,
    Big = 3
}

public enum ExtendedBiosBioType
{
    Invalid = 0, // reserved for invalid enum value
    Autobiography = 1,
    Biography = 2,
    Memoir = 3
}