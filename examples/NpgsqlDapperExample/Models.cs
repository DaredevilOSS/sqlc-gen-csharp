// auto-generated by sqlc - do not edit
using NpgsqlTypes;
using System;
using System.Linq;
using System.Net;
using System.Net.NetworkInformation;
using System.Text.Json;
using System.Xml;

namespace NpgsqlDapperExampleGen;
public class Author
{
    public required long Id { get; init; }
    public required string Name { get; init; }
    public string? Bio { get; init; }
};
public class Book
{
    public required Guid Id { get; init; }
    public required string Name { get; init; }
    public required long AuthorId { get; init; }
    public string? Description { get; init; }
};
public class PostgresType
{
    public bool? CBoolean { get; init; }
    public byte[]? CBit { get; init; }
    public short? CSmallint { get; init; }
    public int? CInteger { get; init; }
    public long? CBigint { get; init; }
    public decimal? CDecimal { get; init; }
    public decimal? CNumeric { get; init; }
    public float? CReal { get; init; }
    public double? CDoublePrecision { get; init; }
    public decimal? CMoney { get; init; }
    public DateTime? CDate { get; init; }
    public TimeSpan? CTime { get; init; }
    public DateTime? CTimestamp { get; init; }
    public DateTime? CTimestampWithTz { get; init; }
    public TimeSpan? CInterval { get; init; }
    public string? CChar { get; init; }
    public string? CVarchar { get; init; }
    public string? CCharacterVarying { get; init; }
    public string? CBpchar { get; init; }
    public string? CText { get; init; }
    public JsonElement? CJson { get; init; }
    public JsonElement? CJsonStringOverride { get; init; }
    public JsonElement? CJsonb { get; init; }
    public string? CJsonpath { get; init; }
    public XmlDocument? CXml { get; init; }
    public XmlDocument? CXmlStringOverride { get; init; }
    public NpgsqlCidr? CCidr { get; init; }
    public IPAddress? CInet { get; init; }
    public PhysicalAddress? CMacaddr { get; init; }
    public string? CMacaddr8 { get; init; }
    public Guid? CUuid { get; init; }
};
public class PostgresGeometricType
{
    public NpgsqlPoint? CPoint { get; init; }
    public NpgsqlLine? CLine { get; init; }
    public NpgsqlLSeg? CLseg { get; init; }
    public NpgsqlBox? CBox { get; init; }
    public NpgsqlPath? CPath { get; init; }
    public NpgsqlPolygon? CPolygon { get; init; }
    public NpgsqlCircle? CCircle { get; init; }
};
public class PostgresArrayType
{
    public byte[]? CBytea { get; init; }
    public bool[]? CBooleanArray { get; init; }
    public string[]? CTextArray { get; init; }
    public int[]? CIntegerArray { get; init; }
    public decimal[]? CDecimalArray { get; init; }
    public DateTime[]? CDateArray { get; init; }
    public DateTime[]? CTimestampArray { get; init; }
};