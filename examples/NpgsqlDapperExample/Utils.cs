// auto-generated by sqlc - do not edit
using Dapper;
using NpgsqlTypes;
using System.Data;
using System.Linq;
using System.Text.Json;

namespace NpgsqlDapperExampleGen;
public static class Utils
{
    public static void ConfigureSqlMapper()
    {
        RegisterNpgsqlTypeHandler<NpgsqlPoint>();
        RegisterNpgsqlTypeHandler<NpgsqlLine>();
        RegisterNpgsqlTypeHandler<NpgsqlLSeg>();
        RegisterNpgsqlTypeHandler<NpgsqlBox>();
        RegisterNpgsqlTypeHandler<NpgsqlPath>();
        RegisterNpgsqlTypeHandler<NpgsqlPolygon>();
        RegisterNpgsqlTypeHandler<NpgsqlCircle>();
    }

    private class NpgsqlTypeHandler<T> : SqlMapper.TypeHandler<T> where T : notnull
    {
        public override T Parse(object value)
        {
            return (T)value;
        }

        public override void SetValue(IDbDataParameter parameter, T? value)
        {
            parameter.Value = value;
        }
    }

    private static void RegisterNpgsqlTypeHandler<T>()
        where T : notnull
    {
        SqlMapper.AddTypeHandler(typeof(T), new NpgsqlTypeHandler<T>());
    }
}