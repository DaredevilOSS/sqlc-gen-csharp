// auto-generated by sqlc - do not edit
namespace NpgsqlDapperLegacyExampleGen
{
    using System.Linq;
    using NpgsqlTypes;
    using System.Data;
    using Dapper;

    public static class Utils
    {
        private class NpgsqlTypeHandler<T> : SqlMapper.TypeHandler<T>
        {
            public override T Parse(object value)
            {
                return (T)value;
            }

            public override void SetValue(IDbDataParameter parameter, T value)
            {
                parameter.Value = value;
            }
        }

        private static void RegisterNpgsqlTypeHandler<T>()
        {
            SqlMapper.AddTypeHandler(typeof(T), new NpgsqlTypeHandler<T>());
        }

        public static void ConfigureSqlMapper()
        {
            RegisterNpgsqlTypeHandler<NpgsqlPoint>();
            RegisterNpgsqlTypeHandler<NpgsqlLine>();
            RegisterNpgsqlTypeHandler<NpgsqlLSeg>();
            RegisterNpgsqlTypeHandler<NpgsqlBox>();
            RegisterNpgsqlTypeHandler<NpgsqlPath>();
            RegisterNpgsqlTypeHandler<NpgsqlPolygon>();
            RegisterNpgsqlTypeHandler<NpgsqlCircle>();
        }
    }
}