// auto-generated by sqlc - do not edit
namespace NpgsqlDapperLegacyExampleGen
{
    using System;
    using System.Data;
    using System.Linq;

    public static class Utils
    {
        public static byte[] GetBytes(IDataRecord reader, int ordinal)
        {
            const int bufferSize = 100000;
            if (reader is null)
                throw new ArgumentNullException(nameof(reader));
            var buffer = new byte[bufferSize];
            var(bytesRead, offset) = (0, 0);
            while (bytesRead < bufferSize)
            {
                var read = (int)reader.GetBytes(ordinal, bufferSize + bytesRead, buffer, offset, bufferSize - bytesRead);
                if (read == 0)
                    break;
                bytesRead += read;
                offset += read;
            }

            if (bytesRead < bufferSize)
                Array.Resize(ref buffer, bytesRead);
            return buffer;
        }

        public static string GetTransformedString<T>(string originalSql, T[] sqlParams, string csharpParamName, string sqlParamName)
        {
            var paramArgs = Enumerable.Range(0, sqlParams.Length).Select(i => $"@{csharpParamName}Arg{i}").ToList();
            return originalSql.Replace($"/*SLICE:{sqlParamName}*/@{sqlParamName}", string.Join(",", paramArgs));
        }
    }
}