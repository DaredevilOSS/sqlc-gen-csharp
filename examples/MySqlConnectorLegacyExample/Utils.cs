// auto-generated by sqlc - do not edit
namespace MySqlConnectorLegacyExampleGen
{
    using System;
    using System.Data;
    using System.Linq;
    using System.Text.RegularExpressions;
    using CsvHelper.TypeConversion;
    using CsvHelper;
    using CsvHelper.Configuration;

    public static class Utils
    {
        public class NullToStringConverter : DefaultTypeConverter
        {
            public override string ConvertToString(object value, IWriterRow row, MemberMapData memberMapData)
            {
                return value == null ? @"\N" : base.ConvertToString(value, row, memberMapData);
            }
        }

        public class BoolToBitConverter : DefaultTypeConverter
        {
            public override string ConvertToString(object value, IWriterRow row, MemberMapData memberMapData)
            {
                switch (value)
                {
                    case null:
                        return @"\N";
                    case bool b:
                        return b ? "1" : "0";
                    default:
                        return base.ConvertToString(value, row, memberMapData);
                }
            }
        }

        public static string TransformQueryForSliceArgs(string originalSql, int sliceSize, string paramName)
        {
            var paramArgs = Enumerable.Range(0, sliceSize).Select(i => $"@{paramName}Arg{i}").ToList();
            return originalSql.Replace($"/*SLICE:{paramName}*/@{paramName}", string.Join(",", paramArgs));
        }
    }
}