using Google.Protobuf;
using System;
using File = Plugin.File;


namespace SqlcGenCsharp.Generators;

internal class CsprojGen(string outputDirectory, string projectName, string namespaceName, Options options)
{
    private const string DUPPER_VERSION = "2.1.35";
    private const string NPSQL_VERSION = "8.0.3";
    private const string MYSQLCONNECTOR_VERSION = "2.3.6";
    private const string SQLITE_VERSION = "8.0.10";
    public File GenerateFile()
    {
        var csprojContents = GetFileContents();
        return new File
        {
            Name = $"{projectName}.csproj",
            Contents = ByteString.CopyFromUtf8(csprojContents)
        };
    }

    private string GetFileContents()
    {
        var optionalNullableProperty = options.DotnetFramework.LatestDotnetSupported() ? Environment.NewLine + "        <Nullable>enable</Nullable>" : "";

        return $"""
                <!--{Consts.AutoGeneratedComment}-->
                <!--Run the following to add the project to the solution:
                   dotnet sln add {outputDirectory}/{projectName}.csproj
                  -->
                <Project Sdk="Microsoft.NET.Sdk">
                
                    <PropertyGroup>
                        <TargetFramework>{options.DotnetFramework.ToName()}</TargetFramework>
                        <RootNamespace>{namespaceName}</RootNamespace>
                        <OutputType>Library</OutputType>{optionalNullableProperty}
                    </PropertyGroup>
                
                {GetItemGroup()}

                </Project>
                """;

        string GetItemGroup()
        {
            if (options.UseDapper)
            {
                // TODO: extract version to user input
                return $"""
                           <ItemGroup>
                               <PackageReference Include="{options.DriverName.ToName()}" Version="{GetPackageVersion(options)}"/>
                               <PackageReference Include="Dapper" Version="{GetPackageVersion(options, true)}"/>
                           </ItemGroup>
                       """;
            }
            return $"""
                        <ItemGroup>
                            <PackageReference Include="{options.DriverName.ToName()}" Version="{GetPackageVersion(options)}"/>
                        </ItemGroup>
                    """;
        }
    }

    private static string GetPackageVersion(Options options,bool isDapper = false)
    {
        if (isDapper) {
            if (options.OverrideDapperVersion != string.Empty)
                return options.OverrideDapperVersion;

            return DUPPER_VERSION;
        }

        if (options.OverrideDriverVersion != string.Empty)
            return options.OverrideDriverVersion;

        return options.DriverName switch
        {
            DriverName.Npgsql => NPSQL_VERSION,
            DriverName.MySqlConnector => MYSQLCONNECTOR_VERSION,
            DriverName.Sqlite => SQLITE_VERSION,
            _ => throw new NotSupportedException($"unsupported driver: {options.DriverName}")
        };
    }
}