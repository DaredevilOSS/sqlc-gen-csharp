using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.CSharp.Syntax;
using SqlcGenCsharp.Drivers;
using System.Collections.Generic;
using System.Linq;
using static Microsoft.CodeAnalysis.CSharp.SyntaxFactory;
using File = Plugin.File;

namespace SqlcGenCsharp.Generators;

internal class UtilsGen(DbDriver dbDriver, string namespaceName)
{
    private const string ClassName = "Utils";

    private string NamespaceName { get; } = namespaceName;

    private RootGen RootGen { get; } = new(dbDriver.Options);

    public File GenerateFile()
    {
        var root = RootGen.CompilationRootGen(
            IdentifierName(NamespaceName), dbDriver.GetUsingDirectivesForUtils(), [GetClass()]);
        root = root.AddCommentOnTop(Consts.AutoGeneratedComment);

        return new File
        {
            Name = $"{ClassName}.cs",
            Contents = root.ToByteString()
        };
    }

    private ClassDeclarationSyntax GetClass()
    {
        var classDeclaration = (ClassDeclarationSyntax)ParseMemberDeclaration(
            $$"""public static class {{ClassName}} { }""")!;
        return classDeclaration.AddMembers(dbDriver.GetMemberDeclarationsForUtils());
    }
}